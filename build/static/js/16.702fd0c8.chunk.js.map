{"version":3,"sources":["components/common/Title/title.ts","styles/layouts.ts","firebase/firebase.tsx","firebase/firebase.config.ts","pages/Recruit/RecruitForm/styled.ts","components/common/input/TextInput/styled.ts","components/common/input/TextInput/index.tsx","img/Folder.tsx","pages/Recruit/RecruitForm/index.tsx","pages/Recruit/RecruitForm/FormFunctions.ts"],"names":["Title","styled","motion","h1","props","theme","fontSize","color","grey800","windowSize","tablet","h2","h3","SubTitle","grey600","SubCategory","p","MainText","grey700","TopMargin","div","LayoutContainer","ContainerInner","CardList","section","NavigationBlock","img","BannerWrapper","firebase","firestore","Timestamp","initializeApp","firebaseConfig","dbService","authService","auth","firebaseKey","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","app","storage","getStorage","FormMargin","FormMarginS","FormMarginXS","RecruitFormWrapper","RecruitFormInner","FormLabel","label","essential","css","tossRed","FormText","FormSubmitButton","button","tossBlueActive","prop","disable","tossBlue200","StyledInput","input","grey400","StyledFileInput","form","grey500","StyledInputWrapper","grey300","tossBlue500","InputImageWrapper","TextInput","name","placeholder","error","onChange","image","file","type","className","e","target","value","Folder","xmlns","viewBox","d","fill","RecruitForm","id","useParams","useState","position","setPosition","setName","phoneNumber","setPhoneNumber","email","setEmail","major","setMajor","studentID","setStudentID","link0","setLink0","link1","setLink1","formSubmit","setFormSubmit","setPlaceholder","useRecoilState","loaderState","loading","setLoading","alertState","alerts","setAlerts","setUploadProgress","useEffect","checkForm","console","log","onSubmit","a","current","uploadFiles","useRef","navigate","useNavigate","setValue","positionHandler","data","files","size","alert","load","storageRef","ref","uploadTask","uploadBytesResumable","on","snapshot","progress","Math","round","bytesTransferred","totalBytes","then","getDownloadURL","url","collection","doc","set","uploadDate","Date","fileURL","alertHandle","alertMessage","onClick","click","style","display"],"mappings":"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","file":"static/js/16.702fd0c8.chunk.js","sourcesContent":["import { motion } from 'framer-motion';\nimport styled from 'styled-components';\n\nexport const Title = styled(motion.h1)`\n  font-size: ${(props) => props.theme.fontSize.h1};\n  font-weight: 600;\n  color: ${(props) => props.theme.color.grey800};\n  word-break: keep-all;\n  margin-bottom: 10px;\n  @media (max-width: ${(props) => props.theme.windowSize.tablet}px) {\n    font-size: ${(props) => props.theme.fontSize.h2};\n  }\n  @media (max-width: 500px) {\n    font-size: ${(props) => props.theme.fontSize.h3};\n  }\n`;\nexport const SubTitle = styled(motion.h2)`\n  font-size: 1.7rem;\n  font-weight: 400;\n  color: ${(props) => props.theme.color.grey600};\n  margin-bottom: 10px;\n  @media (max-width: 500px) {\n    font-size: 1.6rem;\n  }\n`;\nexport const SubCategory = styled(motion.p)`\n  font-size: 1.7rem;\n  font-weight: 500;\n  color: ${(props) => props.theme.color.grey800};\n  margin-bottom: 10px;\n  @media (max-width: 500px) {\n    font-size: 1.6rem;\n  }\n`;\nexport const MainText = styled(motion.p)`\n  font-size: 1.6rem;\n  color: ${(props) => props.theme.color.grey700};\n  font-weight: 400;\n  padding-bottom: 10px;\n`;\n","import { motion } from 'framer-motion';\nimport styled from 'styled-components';\n\nexport const TopMargin = styled.div`\n  height: 50px;\n  @media (max-width: 500px) {\n    height: 30px;\n  }\n`;\nexport const SmallTopMargin = styled.div`\n  height: 30px;\n`;\n\nexport const Tage = styled.div``;\n\nexport const LayoutContainer = styled.div`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  max-width: 1200px;\n  margin: auto;\n  min-width: 320px;\n`;\nexport const ContainerInner = styled.div`\n  width: 92%;\n  max-width: calc(100% - 48px);\n  margin: 0 auto;\n`;\nexport const CardList = styled(motion.section)`\n  display: flex;\n  flex-wrap: wrap;\n`;\n\nexport const BannerImage = styled.img`\n  height: 500px;\n`;\nexport const NavigationBlock = styled.div`\n  height: 60px;\n  width: 100%;\n`;\nexport const BannerWrapper = styled.div`\n  height: 200px;\n  width: 100%;\n  overflow: hidden;\n  display: flex;\n  justify-content: center;\n  @media (max-width: 500px) {\n    height: 180px;\n  }\n`;\n","// Import the functions you need from the SDKs you need\nimport firebase from 'firebase/compat/app';\nimport 'firebase/compat/auth';\nimport 'firebase/compat/firestore';\nimport 'firebase/compat/storage';\nimport { firebaseKey as firebaseConfig } from './firebase.config';\nimport { initializeApp } from 'firebase/app';\nimport { getAnalytics } from 'firebase/analytics';\nimport Timestamp = firebase.firestore.Timestamp;\n\n// TODO: Add SDKs for Firebase products that you want to use\n// https://firebase.google.com/docs/web/setup#available-libraries\n\n// Your web app's Firebase configuration\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\n\nfirebase.initializeApp(firebaseConfig);\nconst app = initializeApp(firebaseConfig);\nexport const firebaseInstance = firebase;\nexport const dbService = firebase.firestore();\nexport const authService = firebase.auth();\nexport const getDbTime = () => console.log(Timestamp.now().seconds * 1000);\n","import { initializeApp } from 'firebase/app';\nimport { getStorage } from 'firebase/storage';\n\nexport const firebaseKey = {\n  apiKey: 'AIzaSyDrAEizOXHcCXYrQa96w6TxfddOS2Yb0tU',\n  authDomain: 'gdsc-dju.firebaseapp.com',\n  projectId: 'gdsc-dju',\n  storageBucket: 'gdsc-dju.appspot.com',\n  messagingSenderId: '487063212251',\n  appId: '1:487063212251:web:82d233e5e10f2b0aca3cfe',\n  measurementId: 'G-3B40W72HNQ',\n};\nconst app = initializeApp(firebaseKey);\n\nconst storage = getStorage(app);\n\nexport { storage, app };\n","import styled, { css } from 'styled-components';\n\nexport const FormTopMargin = styled.div`\n  height: 90px;\n`;\nexport const FormMargin = styled.div`\n  height: 50px;\n`;\nexport const FormMarginS = styled.div`\n  height: 30px;\n`;\nexport const FormMarginXS = styled.div`\n  height: 15px;\n`;\nexport const RecruitFormWrapper = styled.div`\n  max-width: 512px;\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  margin: 0 auto;\n`;\nexport const RecruitFormInner = styled.section`\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n`;\nexport const FormLabel = styled.label<{ essential?: boolean }>`\n  padding: 5px 0;\n  display: inline-block;\n  font-size: ${(props) => props.theme.fontSize.p};\n  font-weight: 400;\n  line-height: 1.5;\n  color: ${(props) => props.theme.color.grey700};\n   {\n    ${(props) =>\n      props.essential &&\n      css`\n        &::after {\n          display: inline-block;\n          margin: 0 0 2px 6px;\n          content: '';\n          width: 6px;\n          height: 6px;\n          background-color: ${(props) => props.theme.color.tossRed};\n          border-radius: 3px;\n        }\n      `}\n  }\n`;\nexport const FormText = styled.p`\n  margin-top: 4px;\n  font-size: 15px;\n  line-height: 24px;\n  font-weight: 300;\n  color: ${(props) => props.theme.color.grey600};\n`;\nexport const FormSubmitButton = styled.button<{ disable?: boolean }>`\n  padding: 18px 20px;\n  min-width: 100px;\n  border: none;\n  color: white;\n  align-items: center;\n  text-align: center;\n  justify-content: center;\n  width: 25%;\n  font-size: ${(props) => props.theme.fontSize.p};\n  border-radius: 10px;\n  cursor: pointer;\n  background: ${(props) => props.theme.color.tossBlueActive};\n\n  ${(prop) =>\n    prop.disable &&\n    css`\n      background: ${(props) => props.theme.color.tossBlue200};\n      cursor: not-allowed;\n    `}\n`;\n","import styled from 'styled-components';\n\nexport const StyledInput = styled.input`\n  padding: 0 18px;\n  margin: 2px 0;\n  border: 0;\n  border-radius: 8px;\n  height: 48px;\n  font-size: ${(props) => props.theme.fontSize.p};\n  outline: none;\n  flex-grow: 1;\n  background: none;\n  font-weight: 400;\n  color: ${(props) => props.theme.color.grey700};\n  &::placeholder {\n    color: ${(props) => props.theme.color.grey400};\n    font-weight: 300;\n  }\n`;\nexport const StyledFileInput = styled.form`\n  color: ${(props) => props.theme.color.grey500};\n  cursor: pointer;\n  overflow: hidden;\n  white-space: nowrap;\n  flex-grow: 1;\n  font-weight: 300;\n  font-size: ${(props) => props.theme.fontSize.p};\n  padding: 0 18px;\n`;\n\nexport const StyledInputWrapper = styled.div<{ color?: string }>`\n  overflow: hidden;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin: 1px auto 0;\n  height: 48px;\n  background: #fff;\n  border: solid 0;\n  border-radius: 8px;\n  box-sizing: border-box;\n  box-shadow: inset 0 0 0 1px ${(props) => props.theme.color.grey300};\n  transition: 0.3s;\n  &:hover {\n    box-shadow: inset 0 0 0 2px ${(props) => props.theme.color.tossBlue200};\n  }\n  .formInput:focus {\n    box-sizing: border-box;\n    box-shadow: inset 0 0 0 2px ${(props) => props.theme.color.tossBlue500};\n  }\n`;\nexport const InputImageWrapper = styled.div`\n  height: 20px;\n  width: 20px;\n  margin: 0 -8px 0 18px;\n  display: flex;\n  align-items: center;\n`;\n","import React, { useRef, useState } from 'react';\nimport Folder from '../../../../img/Folder';\nimport {\n  InputImageWrapper,\n  StyledFileInput,\n  StyledInput,\n  StyledInputWrapper,\n} from './styled';\n\nexport interface Iprops {\n  name?: string;\n  error?: string;\n  setError?: (error: boolean) => void;\n  placeholder?: string;\n  image?: string;\n  file?: boolean;\n  onChange: (e: any) => void;\n  type?: string;\n}\n\nconst TextInput = (props: Iprops) => {\n  const { name, error, placeholder, image, file, onChange, type } = props;\n  return (\n    <>\n      <StyledInputWrapper>\n        <StyledInput\n          className={'formInput'}\n          name={name}\n          type={type}\n          onChange={(e: any) => onChange(e.target.value)}\n          placeholder={placeholder}\n        />\n      </StyledInputWrapper>\n    </>\n  );\n};\n\nexport default TextInput;\n","import React from 'react';\n\nconst Folder = () => {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      viewBox=\"0 0 24 24\"\n      className=\"line-icon\"\n    >\n      <path\n        d=\"M20 4.7h-7.6l-1.7-2.3c-.5-.7-1.3-1.1-2.2-1.1H4c-1.2 0-2.2 1-2.2 2.2v15.9c0 1.2 1 2.2 2.2 2.2h16c1.2 0 2.2-1 2.2-2.2V6.9c0-1.2-1-2.2-2.2-2.2zM3.2 3.6c0-.4.3-.8.8-.8h4.5c.4 0 .8.2 1 .5l1 1.4H3.2V3.6zm17.6 15.9c0 .4-.3.7-.8.7H4c-.4 0-.8-.3-.8-.7V6.2H20c.4 0 .8.3.8.7v12.6z\"\n        fill=\"#6b7684\"\n      ></path>\n    </svg>\n  );\n};\n\nexport default Folder;\n","import React, { useEffect, useRef, useState } from 'react';\nimport { SubTitle, Title } from '../../../components/common/Title/title';\nimport {\n  ContainerInner,\n  LayoutContainer,\n  NavigationBlock,\n} from '../../../styles/layouts';\nimport {\n  FormLabel,\n  FormMargin,\n  FormMarginS,\n  FormMarginXS,\n  FormSubmitButton,\n  FormText,\n  RecruitFormInner,\n  RecruitFormWrapper,\n} from './styled';\nimport TextInput from '../../../components/common/input/TextInput';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport { checkForm, positionHandler } from './FormFunctions';\nimport { getDownloadURL, ref, uploadBytesResumable } from 'firebase/storage';\nimport { storage } from '../../../firebase/firebase.config';\nimport {\n  InputImageWrapper,\n  StyledFileInput,\n  StyledInputWrapper,\n} from '../../../components/common/input/TextInput/styled';\nimport Folder from '../../../img/Folder';\nimport { dbService } from '../../../firebase/firebase';\nimport GoogleSpinner from '../../../components/common/GoogleSpinner';\nimport { useRecoilState } from 'recoil';\nimport { loaderState } from '../../../store/loader';\nimport { alertState } from '../../../store/alert';\n\nconst RecruitForm = () => {\n  const { id } = useParams();\n  const [position, setPosition] = useState('');\n  const [name, setName] = useState('');\n  const [phoneNumber, setPhoneNumber] = useState('');\n  const [email, setEmail] = useState('');\n  const [major, setMajor] = useState('');\n  const [studentID, setStudentID] = useState('');\n  const [link0, setLink0] = useState('');\n  const [link1, setLink1] = useState('');\n  const [formSubmit, setFormSubmit] = useState(false);\n  const [placeholder, setPlaceholder] = useState(\n    '지원서/자기소개서/이력서 업로드 (PDF)',\n  );\n  // const [error, setError] = useState(true);\n  const [loading, setLoading] = useRecoilState(loaderState);\n  const [alerts, setAlerts] = useRecoilState(alertState);\n  const [uploadProgress, setUploadProgress] = useState(0);\n  useEffect(() => {\n    checkForm({\n      position,\n      name,\n      phoneNumber,\n      email,\n      major,\n      studentID,\n      link0,\n      placeholder,\n      setFormSubmit,\n    });\n  }, [\n    link0,\n    major,\n    studentID,\n    email,\n    phoneNumber,\n    name,\n    position,\n    placeholder,\n  ]);\n  console.log(loading);\n  const onSubmit = async () => {\n    {\n      input.current && (await uploadFiles(input.current));\n    }\n  };\n\n  const input = useRef<HTMLInputElement>(null);\n  const navigate = useNavigate();\n  useEffect(() => positionHandler({ value: id, setValue: setPosition }), []);\n\n  const uploadFiles = async (data: HTMLInputElement) => {\n    if (data.files !== null) {\n      const file = data.files[0];\n      console.log(data.files);\n      if (!file) return;\n      if (file.size > 50000001) {\n        alert('파일 사이즈는 50MB 이하로 선택해주세요.');\n        return;\n      }\n      if (file.type !== 'application/pdf') {\n        alert('PDF 파일만 업로드 가능합니다.');\n        return 0;\n      } else {\n        setLoading({ ...loading, load: true });\n        const storageRef = ref(storage, `${file.name}`);\n        const uploadTask = uploadBytesResumable(storageRef, file);\n        await uploadTask.on('state_changed', (snapshot: any) => {\n          const progress = Math.round(\n            (snapshot.bytesTransferred / snapshot.totalBytes) * 100,\n          );\n          setUploadProgress(progress);\n          console.log(progress);\n        }),\n          uploadTask.then(() => {\n            getDownloadURL(storageRef).then(async (url: string) => {\n              console.log(url);\n              dbService.collection('applicants').doc().set({\n                uploadDate: new Date(),\n                name: name,\n                phoneNumber: phoneNumber,\n                email: email,\n                major: major,\n                studentID: studentID,\n                position: position,\n                link0: link0,\n                link1: link1,\n                fileURL: url,\n              });\n              setLoading({ ...loading, load: false });\n              setAlerts({\n                ...alerts,\n                alertHandle: true,\n                alertMessage: `${position}에 지원이 완료되었습니다.`,\n              });\n              navigate(-1);\n            });\n          });\n      }\n    }\n  };\n\n  return (\n    <>\n      <LayoutContainer>\n        <ContainerInner>\n          <NavigationBlock />\n          <FormMargin />\n          <RecruitFormWrapper>\n            <RecruitFormInner>\n              <Title>지원서 작성하기</Title>\n              <SubTitle>{position}</SubTitle>\n              <FormMargin />\n              <div>\n                <FormLabel essential={true}>이름(실명)</FormLabel>\n                <TextInput placeholder={'김구글'} onChange={setName} />\n              </div>\n              <FormMarginS />\n              <div>\n                <FormLabel essential={true}>전화번호</FormLabel>\n                <TextInput\n                  placeholder={'010-0000-0000'}\n                  onChange={setPhoneNumber}\n                />\n              </div>\n              <FormMarginS />\n              <div>\n                <FormLabel essential={true}>이메일(gmail)</FormLabel>\n                <TextInput\n                  placeholder={'googledev@gmail.com'}\n                  onChange={setEmail}\n                />\n              </div>\n              <FormMarginS />\n              <div>\n                <FormLabel essential={true}>학과</FormLabel>\n                <TextInput placeholder={'구글개발학과'} onChange={setMajor} />\n              </div>\n              <FormMarginS />\n              <div>\n                <FormLabel essential={true}>학번</FormLabel>\n                <TextInput placeholder={'20221234'} onChange={setStudentID} />\n              </div>\n              <FormMarginS />\n              <div>\n                <FormLabel essential={true}>지원서</FormLabel>\n                <StyledInputWrapper>\n                  <InputImageWrapper>\n                    <Folder />\n                  </InputImageWrapper>\n                  <StyledFileInput\n                    onClick={() => {\n                      input.current?.click();\n                    }}\n                  >\n                    {placeholder}\n                  </StyledFileInput>\n                  <input\n                    ref={input}\n                    type={'file'}\n                    style={{ display: 'none' }}\n                    name={'fileName'}\n                    onChange={(e) => {\n                      e.target.files && setPlaceholder(e.target.files[0].name);\n                    }}\n                  />\n                </StyledInputWrapper>\n                <FormText>\n                  * 파일은 최대 50MB로 업로드 하실 수 있습니다.\n                </FormText>\n                <FormText>\n                  * 원활한 검토를 위해 PDF 형식으로 제출해주세요.\n                </FormText>\n                <FormText>\n                  * 지원서는 자유 양식이며 기술 스택, 지원동기, 협업 경험, 팀\n                  리드 경험, 문제해결 경험을 포함해주세요.\n                </FormText>\n              </div>\n              <FormMarginS />\n              <div>\n                <FormLabel essential={true}>링크 1</FormLabel>\n                <TextInput placeholder={'https://'} onChange={setLink0} />\n                <FormMarginXS />\n                <FormLabel>링크 2 (선택사항)</FormLabel>\n                <TextInput placeholder={'https://'} onChange={setLink1} />\n                <FormText>\n                  자신을 나타낼 수 있는 개인블로그, 노션, Github링크 등을\n                  입력해주세요.\n                </FormText>\n                <FormText>\n                  *포트폴리오를 업로드하셔야할 경우 클라우드/드라이브에 파일을\n                  업로드 후 공유링크를 입력해주세요.\n                </FormText>\n              </div>\n              <FormMarginS />\n              <FormSubmitButton\n                disable={!formSubmit}\n                onClick={() => onSubmit()}\n              >\n                제출하기\n              </FormSubmitButton>\n              <FormMargin />\n            </RecruitFormInner>\n          </RecruitFormWrapper>\n        </ContainerInner>\n      </LayoutContainer>\n    </>\n  );\n};\n\nexport default RecruitForm;\n","import { getDownloadURL, ref, uploadBytesResumable } from 'firebase/storage';\nimport { storage } from '../../../firebase/firebase.config';\n\nexport const positionHandler = ({\n  value,\n  setValue,\n}: {\n  value: string | undefined;\n  setValue: (value: string) => void;\n}) => {\n  switch (value as string) {\n    case 'frontend':\n      return setValue('Frontend Developer');\n    case 'backend':\n      return setValue('Backend Developer');\n    case 'design':\n      return setValue('UX/UI Designer');\n    case 'android':\n      return setValue('Android Developer');\n    case 'beginner':\n      return setValue('Beginner Position');\n    case 'ml':\n      return setValue('Machine Learning Engineer');\n    default:\n      return;\n  }\n};\ninterface applicantDataType {\n  name: string;\n  data: string;\n}\nconst requireValue = (data: string) => {\n  if (data) {\n    return 'Required';\n  }\n  return '';\n};\nconst checkValue = ({ type, data }: { type: string; data: string }) => {\n  let validate;\n  switch (type) {\n    case 'phoneNumber':\n      return (validate = /^01([0|1|6|7|8|9])-?([0-9]{4})-?([0-9]{4})$/.test(\n        data,\n      ));\n    case 'email':\n      return (validate =\n        /^[0-9a-zA-Z]([-_.\\]?[0-9a-zA-Z])*@[0-9a-zA-Z]([-_.\\]?[0-9a-zA-Z])*\\.[a-zA-Z]{2,3}$/.test(\n          data,\n        ));\n    case 'gmail':\n      return (validate = /^[0-9a-zA-Z]([-_.\\]?[0-9a-zA-Z])*@gmail.com$/.test(\n        data,\n      ));\n    case 'studentID':\n      return (validate = /^[0-9]{8}$/.test(data));\n  }\n};\n\nconst validateData = (props: applicantDataType) => {\n  const { name, data } = props;\n  switch (name) {\n    case 'name':\n      requireValue(data) && '필수 항목입니다.';\n      break;\n    case 'phoneNumber':\n      return 'Email is required';\n    case 'email':\n      return checkValue({ type: 'email', data });\n    case 'major':\n      return checkValue({ type: 'major', data });\n    case 'studentID':\n      return checkValue({ type: 'studentID', data });\n    case 'link':\n      return checkValue({ type: 'link', data });\n    default:\n      return;\n  }\n};\ninterface formDataType {\n  position: string;\n  name: string;\n  phoneNumber: string;\n  email: string;\n  major: string;\n  studentID: string;\n  link0: string;\n  placeholder: string;\n  setFormSubmit: (value: boolean) => void;\n}\nexport const checkForm = (props: formDataType) => {\n  const {\n    position,\n    name,\n    phoneNumber,\n    email,\n    major,\n    studentID,\n    link0,\n    placeholder,\n    setFormSubmit,\n  } = props;\n  if (\n    position &&\n    name &&\n    phoneNumber &&\n    email &&\n    major &&\n    studentID &&\n    placeholder !== '지원서/자기소개서/이력서 업로드 (PDF)' &&\n    link0\n  ) {\n    setFormSubmit(true);\n  }\n};\n"],"sourceRoot":""}