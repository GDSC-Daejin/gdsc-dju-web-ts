{"version":3,"sources":["styles/colors.ts","styles/theme.ts","styles/windowSize.ts","styles/fontSize.ts","components/common/Alert/styled.ts","components/common/Alert/index.tsx","components/common/GoogleSpinner/styled.ts","components/common/GoogleSpinner/index.tsx","components/main/index.tsx","App.tsx","index.tsx","store/alert.ts","store/recruitHandler.ts","api/index.ts"],"names":["primaryColor","grey50","grey100","grey200","grey300","grey400","grey500","grey600","grey700","grey800","grey900","green100","green200","green300","green400","green500","green600","yellow100","yellow200","yellow300","yellow400","yellow500","yellow600","red100","red200","red300","red400","red500","red600","tossRed","blue100","blue200","blue300","blue400","blue500","blue600","tossBlue","tossBlueActive","googleBlue","googleRed","googleYellow","googleGreen","theme","color","windowSize","desk","tablet","mobile","fontSize","h1","h2","h3","h4","h5","h6","h7","p","AlertInnerWrapper","styled","div","AlertText","AlertWrapper","motion","variants","active","opacity","y","unActive","Alert","useRecoilState","alertState","alert","useState","toggle","setToggle","useEffect","alertHandle","setTimeout","AnimatePresence","exit","animate","initial","transition","duration","className","alertStatus","alertMessage","LoaderBackground","GoogleLoader","GoogleSpinner","googleContainer","useRef","lottie","loadAnimation","container","current","renderer","loop","autoplay","animationData","require","ref","Admin","lazy","OnBoard","Auth","Pages","Main","recruitmentState","recruitment","setRecruitment","getRecruitment","a","API","getRecruitmentInfo","data","fallback","path","element","App","ReactDOM","render","StrictMode","document","getElementById","atom","key","default","frontend","backend","android","design","ml","beginner","home","getMemberNickname","axios","get","postOnboardingMembers","payload","post","putRecruitmentInfo","put","this"],"mappings":"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","file":"static/js/main.34d037a4.chunk.js","sourcesContent":["export const assetGrey = {\n  grey50: '#F9FAFB',\n  grey100: '#F2F4F6',\n  grey200: '#E5E8EB',\n  grey300: '#D1D6DB',\n  grey400: '#B0B8C1',\n  grey500: '#8B95A1',\n  grey600: '#6B7684',\n  grey700: '#4E5968',\n  grey800: '#333D4B',\n  grey900: '#191F28',\n};\nexport const assetGreen = {\n  green100: '#E8F5E9',\n  green200: '#C8E6C9',\n  green300: '#A5D6A7',\n  green400: '#81C784',\n  green500: '#66BB6A',\n  green600: '#4CAF50',\n};\nexport const assetYellow = {\n  yellow100: '#FFF8E1',\n  yellow200: '#FFECB3',\n  yellow300: '#FFE082',\n  yellow400: '#FFD54F',\n  yellow500: '#FFCA28',\n  yellow600: '#FFC107',\n};\nexport const assetRed = {\n  red100: '#FFEBEE',\n  red200: '#FFCDD2',\n  red300: '#EF9A9A',\n  red400: '#E57373',\n  red500: '#EF5350',\n  red600: '#F44336',\n  tossRed: '#f44336',\n};\nexport const assetBlue = {\n  blue100: '#E3F2FD',\n  blue200: '#BBDEFB',\n  blue300: '#90CAF9',\n  blue400: '#64B5F6',\n  blue500: '#42A5F5',\n  blue600: '#2196F3',\n  tossBlue: '#42a5f5',\n  tossBlueActive: '#3886f6',\n};\nexport const googleLogoColor = {\n  googleBlue: '#4285F4',\n  googleRed: '#EA4335',\n  googleYellow: '#FBBC04',\n  googleGreen: '#34A853',\n};\nexport const primaryColor = {\n  ...assetGrey,\n  ...assetGreen,\n  ...assetYellow,\n  ...assetRed,\n  ...assetBlue,\n  ...googleLogoColor,\n};\n\nexport const colors = { ...primaryColor };\n","import { DefaultTheme } from 'styled-components';\n\nimport { colors } from './colors';\nimport { windowSize } from './windowSize';\nimport { fontSize } from './fontSize';\n\nexport const theme: DefaultTheme = {\n  color: colors,\n  windowSize: windowSize,\n  fontSize: fontSize,\n};\n","export const windowSize = { desk: 1024, tablet: 768, mobile: 375 };\n","export const fontSize = {\n  h1: '5.6rem',\n  h2: '4.8rem',\n  h3: '3.6rem',\n  h4: '3.2rem',\n  h5: '2.4rem',\n  h6: '2.0rem',\n  h7: '1.7rem',\n  p: '1.5rem,',\n};\n","import styled from 'styled-components';\nimport { motion } from 'framer-motion';\n\nexport const AlertInnerWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  flex-direction: row;\n  padding: 15px 0px;\n  justify-content: center;\n  text-align: center;\n  width: 100%;\n  opacity: 80%;\n  z-index: 3;\n`;\nexport const AlertText = styled.div`\n  font-size: 18px;\n  opacity: 100%;\n  margin-left: 5px;\n  display: flex;\n  align-items: center;\n  @media (max-width: 500px) {\n    font-size: 17px;\n  }\n  @media (max-width: 320px) {\n    font-size: 15px;\n  }\n`;\nexport const AlertWrapper = styled(motion.div)`\n  position: fixed;\n  width: 100%;\n  top: 60px;\n  flex: 1;\n  display: flex;\n  justify-content: flex-end;\n  align-items: center;\n  z-index: 999;\n\n  & :hover {\n    cursor: default;\n  }\n`;\n","import React, { useEffect, useState } from 'react';\nimport { useRecoilState } from 'recoil';\nimport { AlertInnerWrapper, AlertText, AlertWrapper } from './styled';\nimport { alertState } from '../../../store/alert';\nimport './Alert.css';\nimport { AnimatePresence } from 'framer-motion';\n\nconst variants = {\n  active: {\n    opacity: 1,\n    y: 0,\n  },\n  unActive: {\n    opacity: 0,\n  },\n};\nconst Alert = () => {\n  const [alert, setAlert] = useRecoilState(alertState);\n  const [toggle, setToggle] = useState<boolean>(true);\n\n  useEffect(() => {\n    setToggle(alert.alertHandle);\n    setTimeout(() => {\n      setToggle(false);\n    }, 4000);\n  }, []);\n  return (\n    <AnimatePresence>\n      {toggle && (\n        <AlertWrapper\n          variants={variants}\n          exit={'unActive'}\n          animate={'active'}\n          initial={{ opacity: 0 }}\n          transition={{ duration: 0.5 }}\n        >\n          <AlertInnerWrapper className={alert.alertStatus}>\n            <AlertText>{alert.alertMessage}</AlertText>\n          </AlertInnerWrapper>\n        </AlertWrapper>\n      )}\n    </AnimatePresence>\n  );\n};\n\nexport default Alert;\n","import styled from 'styled-components';\n\nexport const LoaderBackground = styled.div`\n  display: flex;\n  background: white;\n  width: 100vw;\n  height: 100vh;\n  align-items: center;\n  justify-content: center;\n`;\nexport const GoogleLoader = styled.div`\n  width: 100px;\n`;\n","import React, { useEffect, useRef } from 'react';\nimport { GoogleLoader, LoaderBackground } from './styled';\nimport lottie from 'lottie-web';\n\nconst GoogleSpinner = () => {\n  const googleContainer = useRef<HTMLDivElement>(null);\n  useEffect(\n    () =>\n      void lottie.loadAnimation({\n        container: googleContainer.current as Element,\n        renderer: 'svg',\n        loop: true,\n        autoplay: true,\n        animationData: require('./GoogleAnimation.json'),\n      }),\n    [],\n  );\n  return (\n    <>\n      <LoaderBackground>\n        <GoogleLoader ref={googleContainer}></GoogleLoader>\n      </LoaderBackground>\n    </>\n  );\n};\n\nexport default GoogleSpinner;\n","import React, { lazy, Suspense, useEffect } from 'react';\nimport { Route, Routes } from 'react-router';\nimport { useRecoilState } from 'recoil';\nimport Alert from '../common/Alert';\nimport { alertState } from '../../store/alert';\nimport GoogleSpinner from '../common/GoogleSpinner';\nimport { recruitmentState } from '../../store/recruitHandler';\nimport API from '../../api';\n\nconst Admin = lazy(() => import('../../pages/Admin'));\nconst OnBoard = lazy(() => import('../../pages/OnBoard'));\nconst Auth = lazy(() => import('../../pages/Auth'));\nconst Pages = lazy(() => import('../../pages'));\nexport const Main = () => {\n  const [alert] = useRecoilState(alertState);\n  const [recruitment, setRecruitment] = useRecoilState(recruitmentState);\n\n  const getRecruitment = async (): Promise<void> => {\n    const data = await API.getRecruitmentInfo();\n    setRecruitment({ ...recruitment, ...data.data });\n  };\n  useEffect(() => {\n    getRecruitment();\n  }, []);\n  return (\n    <>\n      <Suspense fallback={<GoogleSpinner />}>\n        {alert.alertHandle && <Alert />}\n        <Routes>\n          <Route path={'/*'} element={<Pages />} />\n          <Route path={'/main/*'} element={<Pages />} />\n          <Route path={'/admin/*'} element={<Admin />} />\n          <Route path={'/onboard/*'} element={<OnBoard />} />\n          <Route path={'/auth/*'} element={<Auth />} />\n        </Routes>\n      </Suspense>\n    </>\n  );\n};\n\nexport default Main;\n","import React from 'react';\nimport { ThemeProvider } from 'styled-components';\nimport { theme } from './styles/theme';\nimport { Main } from './components/main';\nimport './App.css';\n\nfunction App() {\n  return (\n    <ThemeProvider theme={theme}>\n      <Main />\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\nimport { BrowserRouter } from 'react-router-dom';\nimport { RecoilRoot } from 'recoil';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <RecoilRoot>\n        <App />\n      </RecoilRoot>\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","import { atom } from 'recoil';\n\nexport const ALERT = 'alert';\n\nexport const AlertState = {\n  alertHandle: false,\n  alertMessage: '',\n  alertStatus: '',\n};\nexport const alertState = atom<typeof AlertState>({\n  key: ALERT,\n  default: AlertState,\n});\n","import { atom } from 'recoil';\n\nconst RECRUITMENT = 'recruitment';\nexport const RecruitmentState = {\n  frontend: false,\n  backend: false,\n  android: false,\n  design: false,\n  ml: false,\n  beginner: false,\n  home: false,\n};\nexport const recruitmentState = atom<typeof RecruitmentState>({\n  key: RECRUITMENT,\n  default: RecruitmentState,\n});\n","// https://firestore.googleapis.com/v1/projects/gdsc-dju/databases/(default)/documents/members?key=AIzaSyDrAEizOXHcCXYrQa96w6TxfddOS2Yb0tU\nimport axios from 'axios';\nimport {\n  nickNameDataType,\n  onBoardingMember,\n  recruitmentInfoDataType,\n  UserDataState,\n} from './types';\nimport { OnboardingUserState } from '../store/onboardingUser';\n\nexport class GDSCApi {\n  private API: string;\n  constructor() {\n    this.API = 'https://gdsc-dju.com';\n  }\n  getMemberNickname = () => {\n    return axios.get<nickNameDataType>(\n      `${this.API}/api/member/onBoarding/nickname`,\n    );\n  };\n  postOnboardingMembers = (payload: onBoardingMember) => {\n    return axios.post<onBoardingMember>(\n      `${this.API}/api/member/onBoarding/join`,\n      payload,\n    );\n  };\n  getRecruitmentInfo = () => {\n    return axios.get<recruitmentInfoDataType>(`${this.API}/api/support/limit`);\n  };\n  putRecruitmentInfo = (payload: recruitmentInfoDataType) => {\n    return axios.put<recruitmentInfoDataType>(\n      `${this.API}/api/support/limit/update`,\n      payload,\n    );\n  };\n}\nexport default new GDSCApi();\n"],"sourceRoot":""}