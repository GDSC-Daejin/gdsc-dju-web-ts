{"version":3,"sources":["components/common/Title/title.ts","styles/layouts.ts","firebase/firebase.tsx","firebase/firebase.config.ts","pages/Recruit/RecruitForm/FormFunctions.ts","pages/Recruit/RecruitForm/styled.ts","components/common/input/TextInput/styled.ts","components/common/input/TextInput/index.tsx","components/Validation/profileEdit.ts","img/Folder.tsx","components/common/input/FileInput/index.tsx","pages/Recruit/RecruitForm/index.tsx"],"names":["Title","styled","motion","h1","props","theme","fontSize","color","grey800","windowSize","tablet","h2","h3","SubTitle","grey600","SubCategory","p","MainText","grey700","TopMargin","div","LayoutContainer","ContainerInner","CardList","section","BannerWrapper","img","firebase","firestore","Timestamp","initializeApp","firebaseConfig","dbService","authService","auth","firebaseKey","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","app","storage","getStorage","positionSelect","FormMargin","FormMarginXS","RecruitFormWrapper","RecruitFormInner","FormLabel","label","body2","essential","css","tossRed","FormText","FormLi","li","tossBlue","FormArticleWrapper","article","grey300","grey50","FormSubmitButton","button","tossBlueActive","prop","disable","tossBlue200","StyledInput","Field","body1","grey400","disabled","grey100","StyledFileInput","grey500","StyledInputWrapper","error","tossBlue500","InputImageWrapper","ErrorBox","TextInput","name","placeholder","onChange","type","touched","errorToggle","className","memo","nameSchema","Yup","min","matches","required","phoneNumberSchema","max","phoneNumber","emailSchema","email","majorSchema","major","studentIDSchema","studentID","urlValidation","recruitFormSchema","shape","link0","link1","Folder","xmlns","viewBox","d","fill","FileInput","ref","defaultPlaceholder","uploadFiles","useState","setPlaceholder","console","log","current","files","onClick","click","style","display","e","target","forwardRef","RecruitForm","id","useParams","position","setPosition","useRecoilState","loaderState","loading","setLoading","alertState","alerts","setAlerts","setUploadProgress","onSubmit","a","input","useRef","navigate","useNavigate","recruitItem","uploadDate","Date","fileURL","recruitFormik","useFormik","initialValues","validationSchema","useLayoutEffect","data","file","size","alert","load","storageRef","uploadTask","uploadBytesResumable","on","snapshot","progress","Math","round","bytesTransferred","totalBytes","then","getDownloadURL","url","collection","doc","set","alertHandle","alertMessage","requiredSchema","values","length","isValid","value","handleChange","errors"],"mappings":"0RAGaA,EAAQC,YAAOC,IAAOC,GAAdF,CAAH,sPACH,SAACG,GAAD,OAAWA,EAAMC,MAAMC,SAASH,MAEpC,SAACC,GAAD,OAAWA,EAAMC,MAAME,MAAMC,WAGjB,SAACJ,GAAD,OAAWA,EAAMC,MAAMI,WAAWC,UACxC,SAACN,GAAD,OAAWA,EAAMC,MAAMC,SAASK,MAGhC,SAACP,GAAD,OAAWA,EAAMC,MAAMC,SAASM,MAGpCC,EAAWZ,YAAOC,IAAOS,GAAdV,CAAH,0KAGV,SAACG,GAAD,OAAWA,EAAMC,MAAME,MAAMO,WAM3BC,EAAcd,YAAOC,IAAOc,EAAdf,CAAH,0KAGb,SAACG,GAAD,OAAWA,EAAMC,MAAME,MAAMC,WAM3BS,EAAWhB,YAAOC,IAAOc,EAAdf,CAAH,+GAEV,SAACG,GAAD,OAAWA,EAAMC,MAAME,MAAMW,Y,wPCjC3BC,EAAYlB,IAAOmB,IAAV,oGAYTC,GANiBpB,IAAOmB,IAAV,6CAIPnB,IAAOmB,IAAV,0BAEcnB,IAAOmB,IAAV,8IAQfE,EAAiBrB,IAAOmB,IAAV,+FAKdG,EAAWtB,YAAOC,IAAOsB,QAAdvB,CAAH,kEAQRwB,GAHcxB,IAAOyB,IAAV,8CAGKzB,IAAOmB,IAAV,2L,iCCpC1B,0HAQmBO,IAASC,UAAUC,UAQtCF,IAASG,cAAcC,KACXD,YAAcC,KACMJ,IADhC,IAEaK,EAAYL,IAASC,YACrBK,EAAcN,IAASO,Q,iCCpBpC,0FAGaC,EAAc,CACzBC,OAAQ,0CACRC,WAAY,2BACZC,UAAW,WACXC,cAAe,uBACfC,kBAAmB,eACnBC,MAAO,4CACPC,cAAe,gBAEXC,EAAMb,YAAcK,GAEpBS,EAAUC,YAAWF,I,2FCiIfG,E,gFC1ICC,GAHgB9C,IAAOmB,IAAV,6CAGAnB,IAAOmB,IAAV,8CAMV4B,GAHc/C,IAAOmB,IAAV,6CAGInB,IAAOmB,IAAV,8CAGZ6B,EAAqBhD,IAAOmB,IAAV,8JAQlB8B,EAAmBjD,IAAOuB,QAAV,0GAMhB2B,EAAYlD,IAAOmD,MAAV,yKAGP,SAAChD,GAAD,OAAWA,EAAMC,MAAMC,SAAS+C,SAGpC,SAACjD,GAAD,OAAWA,EAAMC,MAAME,MAAMW,WAElC,SAACd,GAAD,OACAA,EAAMkD,WACNC,YADA,2QAQwB,SAACnD,GAAD,OAAWA,EAAMC,MAAME,MAAMiD,cAM9CC,EAAWxD,IAAOe,EAAV,8HAKV,SAACZ,GAAD,OAAWA,EAAMC,MAAME,MAAMO,WAE3B4C,EAASzD,IAAO0D,GAAV,ocAMR,SAACvD,GAAD,OAAWA,EAAMC,MAAME,MAAMO,WAY3B,SAACV,GAAD,OAAWA,EAAMC,MAAME,MAAMqD,YAK7BC,EAAqB5D,IAAO6D,QAAV,2KACT,SAAC1D,GAAD,OAAWA,EAAMC,MAAME,MAAMwD,WAG7B,SAAC3D,GAAD,OAAWA,EAAMC,MAAME,MAAMyD,UAItCC,EAAmBhE,IAAOiE,OAAV,gSASd,SAAC9D,GAAD,OAAWA,EAAMC,MAAMC,SAAS+C,SAG/B,SAACjD,GAAD,OAAWA,EAAMC,MAAME,MAAM4D,kBAEzC,SAACC,GAAD,OACAA,EAAKC,SACLd,YADA,oFAEgB,SAACnD,GAAD,OAAWA,EAAMC,MAAME,MAAM+D,kB,SCvGpCC,EAActE,YAAOuE,IAAPvE,CAAH,gTAMT,SAACG,GAAD,OAAWA,EAAMC,MAAMC,SAASmE,SAKpC,SAACrE,GAAD,OAAWA,EAAMC,MAAME,MAAMW,WAE3B,SAACd,GAAD,OAAWA,EAAMC,MAAME,MAAMmE,WAGtC,SAACtE,GAAD,OACAA,EAAMuE,UACNpB,YADA,2EAEgB,SAACnD,GAAD,OAAWA,EAAMC,MAAME,MAAMqE,WAClC,SAACxE,GAAD,OAAWA,EAAMC,MAAME,MAAMmE,cAG/BG,EAAkB5E,IAAOmB,IAAV,yLACjB,SAAChB,GAAD,OAAWA,EAAMC,MAAME,MAAMuE,WAMzB,SAAC1E,GAAD,OAAWA,EAAMC,MAAMC,SAASmE,SAIlCM,EAAqB9E,IAAOmB,IAAV,0eAeC,SAAChB,GAAD,OAAWA,EAAMC,MAAME,MAAMwD,WACzD,SAAC3D,GAAD,OACAA,EAAM4E,OACNzB,YADA,uEAEgCnD,EAAMC,MAAME,MAAMiD,YAIpB,SAACpD,GAAD,OAAWA,EAAMC,MAAME,MAAM+D,eACzD,SAAClE,GAAD,OACAA,EAAM4E,OACNzB,YADA,2EAEgCnD,EAAMC,MAAME,MAAMiD,YAKtB,SAACpD,GAAD,OAAWA,EAAMC,MAAME,MAAM0E,eACzD,SAAC7E,GAAD,OACAA,EAAM4E,OACNzB,YADA,2EAEgCnD,EAAMC,MAAME,MAAMiD,YAGpD,SAACpD,GAAD,OACCA,EAAMuE,UACPpB,YADA,wFAOS2B,EAAoBjF,IAAOmB,IAAV,iIAOjB+D,EAAWlF,IAAOmB,IAAV,+IAIV,SAAChB,GAAD,OAAWA,EAAMC,MAAME,MAAMiD,WACzB,SAACpD,GAAD,OAAWA,EAAMC,MAAMC,SAAS+C,S,OCzEzC+B,EAAY,SAAChF,GACjB,IAAQiF,EAAgEjF,EAAhEiF,KAAMC,EAA0DlF,EAA1DkF,YAAaC,EAA6CnF,EAA7CmF,SAAUC,EAAmCpF,EAAnCoF,KAAMb,EAA6BvE,EAA7BuE,SAAUK,EAAmB5E,EAAnB4E,MAAOS,EAAYrF,EAAZqF,QACtDC,KAAiBV,IAASS,GAChC,OACE,qCACE,cAACV,EAAD,CAAoBC,MAAOU,EAAaf,UAAWA,EAAnD,SACE,cAACJ,EAAD,CACEoB,UAAW,YACXN,KAAMA,EACNG,KAAMA,EACND,SAAUA,GAAYA,EACtBD,YAAaA,EACbX,SAAUA,MAGd,cAACQ,EAAD,UAAWH,GAASS,GAAW,mCAAGT,UAKzBY,kBAAKR,G,kBHoGRtC,K,8BAAAA,E,4BAAAA,E,wBAAAA,E,4BAAAA,E,6BAAAA,E,gCAAAA,M,4EI7IC+C,GAAa,CACxBR,KAAMS,OACHC,IAAI,EAAG,yEACPC,QAAQ,8CAAiB,mEACzBC,SAAS,sDAqBDC,IAlBDJ,OACPC,IAAI,EAAG,kEACPI,IAAI,GAAI,kFACRH,QAAQ,SAAU,wEAElBC,SAAS,qDAGDH,OACRC,IAAI,GAAI,oEACRI,IAAI,GAAI,6CACRF,SAAS,qDAGHH,OACNC,IAAI,GAAI,oEACRE,SAAS,qDAEmB,CAC/BG,YAAaN,OACVE,QACC,8CACA,iGAEDC,SAAS,uDAEDI,GAAc,CACzBC,MAAOR,OACJC,IAAI,EAAG,qDACPC,QACC,uCACA,0EAEDC,SAAS,sDAEDM,GAAc,CACzBC,MAAOV,OACJC,IAAI,EAAG,mEACPC,QAAQ,8CAAiB,mEACzBC,SAAS,sDAEDQ,GAAkB,CAC7BC,UAAWZ,OACRE,QAAQ,aAAc,qFACtBC,SAAS,sDAoBDU,IAjBDb,OAAaE,QACrB,kFACA,oFAIQF,OAAaE,QACrB,gDACA,4EAImBF,OAAaE,QAChC,gDACA,4EAGyBF,OAAaE,QACxC,gDACA,6EAGWY,GAAoBd,OAAae,MAAb,2EAC5BhB,IACAK,IACAG,IACAE,IACAE,IAL4B,IAM/BK,MAAOH,GACPI,MAAOJ,MCpEMK,GAfA,WACb,OACE,qBACEC,MAAM,6BACNC,QAAQ,YACRvB,UAAU,YAHZ,SAKE,sBACEwB,EAAE,gRACFC,KAAK,eCIPC,GAAY,SAACjH,EAAekH,GAAc,IAAD,EACrCC,EAA2DnH,EAA3DmH,mBAAiC7B,GAA0BtF,EAAvCoH,YAAuCpH,EAA1BsF,aAAaf,EAAavE,EAAbuE,SACtD,EAAsC8C,mBACpCF,GAAsB,iBADxB,mBAAOjC,EAAP,KAAoBoC,EAApB,KAKA,OADAC,QAAQC,IAAR,UAAYN,EAAIO,eAAhB,aAAY,EAAaC,OAEvB,eAAC/C,EAAD,CAAoBC,MAAOU,EAAaf,UAAWA,EAAnD,UACE,cAACO,EAAD,UACE,cAAC,GAAD,MAEF,cAACL,EAAD,CACEkD,QAAS,WAAO,IAAD,EACb,UAAAT,EAAIO,eAAJ,SAAaG,SAFjB,SAKG1C,IAEH,uBACEgC,IAAKA,EACL9B,KAAM,OACNyC,MAAO,CAAEC,QAAS,QAClB7C,KAAM,WACNE,SAAU,SAAC4C,GACTA,EAAEC,OAAON,OAASJ,EAAeS,EAAEC,OAAON,MAAM,GAAGzC,aAO9CgD,wBAAWhB,ICdpBiB,GAAc,WAAO,IAAD,EAChBC,EAAOC,eAAPD,GACR,EAAgCd,mBAAS,IAAzC,mBAAOgB,EAAP,KAAiBC,EAAjB,KACA,EAA8BC,aAAeC,MAA7C,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAA4BH,aAAeI,MAA3C,mBAAOC,EAAP,KAAeC,EAAf,KACA,EAA4CxB,mBAAS,GAArD,mBAAuByB,GAAvB,WACMC,EAAQ,uCAAG,sBAAAC,EAAA,8DAEbC,EAAMxB,SAFO,qCAEWL,EAAY6B,EAAMxB,SAF7B,2CAAH,qDAKRwB,EAAQC,iBAAyB,MACjCC,EAAWC,eACXC,EAAc,CAClBC,WAAY,IAAIC,KAChBtE,KAAM,GACNe,YAAa,GACbE,MAAO,GACPE,MAAO,GACPE,UAAW,GACX+B,SAAU3F,EAAeyF,GACzBzB,MAAO,GACPC,MAAO,GACP6C,QAAS,IAELC,EAAgBC,YAAU,CAC9BC,cAAeN,EACfN,SAAU,aAGVa,iBAAkBpD,KAEpBqD,2BAAgB,WACdvB,EAAY5F,EAAeyF,MAC1B,CAACA,IACJ,IAAMf,EAAW,uCAAG,WAAO0C,GAAP,mBAAAd,EAAA,yDACC,OAAfc,EAAKpC,MADS,oBAEVqC,EAAOD,EAAKpC,MAAM,GACxBH,QAAQC,IAAIsC,EAAKpC,OACZqC,EAJW,sDAKZA,EAAKC,KAAO,UALA,uBAMdC,MAAM,uGANQ,6BASE,oBAAdF,EAAK3E,KATO,wBAUd6E,MAAM,6EAVQ,kBAWP,GAXO,eAadvB,EAAW,2BAAKD,GAAN,IAAeyB,MAAM,KACzBC,EAAajD,aAAI1E,KAAD,UAAauH,EAAK9E,OAClCmF,EAAaC,aAAqBF,EAAYJ,GAftC,UAgBRK,EAAWE,GAAG,iBAAiB,SAACC,GACpC,IAAMC,EAAWC,KAAKC,MACnBH,EAASI,iBAAmBJ,EAASK,WAAc,KAEtD9B,EAAkB0B,MApBN,QAsBZJ,EAAWS,MAAK,WACdC,aAAeX,GAAYU,KAA3B,uCAAgC,WAAOE,GAAP,SAAA/B,EAAA,6DAC9BzB,QAAQC,IAAIuD,GADkB,SAExBnJ,KACHoJ,WAAW,cACXC,MACAC,IAHG,2BAIC7B,GAJD,IAKFG,QAASuB,KAPiB,OAS9BrC,EAAW,2BAAKD,GAAN,IAAeyB,MAAM,KAC/BrB,EAAU,2BACLD,GADI,IAEPuC,aAAa,EACbC,aAAa,GAAD,OAAK/C,EAAL,4EAEdc,GAAU,GAfoB,2CAAhC,0DAvBU,4CAAH,sDA4CXkC,KACJ5B,EAAc6B,OAAOpF,OACrBuD,EAAc6B,OAAOrG,MACrBwE,EAAc6B,OAAOtF,aACrByD,EAAc6B,OAAOlF,OACrBqD,EAAc6B,OAAOhF,WACrBmD,EAAc6B,OAAOjD,UACrBoB,EAAc6B,OAAO5E,MAAM6E,OAAS,IANpC,UAOAtC,EAAMxB,eAPN,aAOA,EAAeC,QAMjB,OAJAH,QAAQC,IAAI,mBAAqB6D,GACjC9D,QAAQC,IAAI,YAAciC,EAAc+B,SACxCjE,QAAQC,IAAIiC,EAAc+B,SAAWH,GAGnC,mCACE,cAAC,IAAD,UACE,eAAC,IAAD,WACE,cAAC1I,EAAD,IACA,cAAC,IAAD,CAAgB8I,MAAOhC,EAAvB,SACE,cAAC5G,EAAD,UACE,eAACC,EAAD,WACE,cAAC,IAAD,0DACA,cAAC,IAAD,UAAWuF,IACX,cAAC1F,EAAD,IACA,gCACE,cAACI,EAAD,CAAWG,WAAW,EAAtB,wCACA,cAAC,GAAD,CACEgC,YAAa,qBACbD,KAAM,OACNwG,MAAOhC,EAAc6B,OAAOrG,KAC5BE,SAAUsE,EAAciC,aACxBrG,QAASoE,EAAcpE,QAAQJ,KAC/BL,MAAO6E,EAAckC,OAAO1G,UAIhC,gCACE,cAAClC,EAAD,CAAWG,WAAW,EAAtB,sCACA,cAAC,GAAD,CACEgC,YAAa,gBACbD,KAAM,cACNwG,MAAOhC,EAAc6B,OAAOtF,YAC5Bb,SAAUsE,EAAciC,aACxBrG,QAASoE,EAAcpE,QAAQW,YAC/BpB,MAAO6E,EAAckC,OAAO3F,iBAIhC,gCACE,cAACjD,EAAD,CAAWG,WAAW,EAAtB,uCACA,cAAC,GAAD,CACEgC,YAAa,sBACbD,KAAM,QACNwG,MAAOhC,EAAc6B,OAAOpF,MAC5Bf,SAAUsE,EAAciC,aACxBrG,QAASoE,EAAcpE,QAAQa,MAC/BtB,MAAO6E,EAAckC,OAAOzF,WAGhC,gCACE,cAACnD,EAAD,CAAWG,WAAW,EAAtB,0BACA,cAAC,GAAD,CACEgC,YAAa,uCACbD,KAAM,QACNwG,MAAOhC,EAAc6B,OAAOlF,MAC5BjB,SAAUsE,EAAciC,aACxBrG,QAASoE,EAAcpE,QAAQe,MAC/BxB,MAAO6E,EAAckC,OAAOvF,WAIhC,gCACE,cAACrD,EAAD,CAAWG,WAAW,EAAtB,0BACA,cAAC,GAAD,CACEgC,YAAa,WACbD,KAAM,YACNwG,MAAOhC,EAAc6B,OAAOhF,UAC5BnB,SAAUsE,EAAciC,aACxBrG,QAASoE,EAAcpE,QAAQiB,UAC/B1B,MAAO6E,EAAckC,OAAOrF,eAGhC,gCACE,cAACvD,EAAD,CAAWG,WAAW,EAAtB,gCACA,cAAC,GAAD,CACEqB,UAAU,EACVU,KAAM,WACNC,YAAamD,OAKjB,gCACE,cAACtF,EAAD,CAAWG,WAAW,EAAtB,gCACA,cAAC,GAAD,CACEiE,mBAAoB,0DACpBD,IAAK+B,IAEP,cAAC5F,EAAD,4HAGA,cAACA,EAAD,sIAGA,cAACA,EAAD,8KAGA,eAACI,EAAD,WACE,cAACH,EAAD,oHACA,cAACA,EAAD,mJAGA,cAACA,EAAD,mNAIA,cAACA,EAAD,iNAIA,cAACA,EAAD,yPAMJ,gCACE,cAACP,EAAD,CAAWG,WAAW,EAAtB,4BACA,cAAC,GAAD,CACEgC,YAAa,WACbD,KAAM,QACNwG,MAAOhC,EAAc6B,OAAO5E,MAC5BvB,SAAUsE,EAAciC,aACxBrG,QAASoE,EAAcpE,QAAQqB,MAC/B9B,MAAO6E,EAAckC,OAAOjF,QAE9B,cAAC9D,EAAD,IACA,cAACG,EAAD,wDACA,cAAC,GAAD,CACEmC,YAAa,WACbD,KAAM,QACNwG,MAAOhC,EAAc6B,OAAO3E,MAC5BxB,SAAUsE,EAAciC,aACxBrG,QAASoE,EAAcpE,QAAQsB,MAC/B/B,MAAO6E,EAAckC,OAAOhF,QAE9B,cAACtD,EAAD,mMAIA,cAACA,EAAD,yRAKF,cAACV,EAAD,IACA,cAACkB,EAAD,CACE8D,QAAS,kBAAMoB,KACf9E,UAAWwF,EAAc+B,SAAWH,GAFtC,sCAMA,cAAC1I,EAAD,mBAUD6C,yBAAK0C","file":"static/js/16.44560641.chunk.js","sourcesContent":["import { motion } from 'framer-motion';\nimport styled from 'styled-components';\n\nexport const Title = styled(motion.h1)`\n  font-size: ${(props) => props.theme.fontSize.h1};\n  font-weight: 600;\n  color: ${(props) => props.theme.color.grey800};\n  word-break: keep-all;\n  margin-bottom: 10px;\n  @media (max-width: ${(props) => props.theme.windowSize.tablet}px) {\n    font-size: ${(props) => props.theme.fontSize.h2};\n  }\n  @media (max-width: 500px) {\n    font-size: ${(props) => props.theme.fontSize.h3};\n  }\n`;\nexport const SubTitle = styled(motion.h2)`\n  font-size: 1.7rem;\n  font-weight: 400;\n  color: ${(props) => props.theme.color.grey600};\n  margin-bottom: 10px;\n  @media (max-width: 500px) {\n    font-size: 1.6rem;\n  }\n`;\nexport const SubCategory = styled(motion.p)`\n  font-size: 1.7rem;\n  font-weight: 500;\n  color: ${(props) => props.theme.color.grey800};\n  margin-bottom: 10px;\n  @media (max-width: 500px) {\n    font-size: 1.6rem;\n  }\n`;\nexport const MainText = styled(motion.p)`\n  font-size: 1.6rem;\n  color: ${(props) => props.theme.color.grey700};\n  font-weight: 400;\n  padding-bottom: 10px;\n`;\n","import { motion } from 'framer-motion';\nimport styled from 'styled-components';\n\nexport const TopMargin = styled.div`\n  height: 50px;\n  @media (max-width: 500px) {\n    height: 30px;\n  }\n`;\nexport const SmallTopMargin = styled.div`\n  height: 30px;\n`;\n\nexport const Tage = styled.div``;\n\nexport const LayoutContainer = styled.div`\n  position: relative;\n  width: 100%;\n  max-width: 1140px;\n  margin: 0 auto;\n  min-width: 320px;\n  flex: 1;\n`;\nexport const ContainerInner = styled.div`\n  width: 92%;\n  max-width: calc(100% - 48px);\n  margin: 0 auto;\n`;\nexport const CardList = styled(motion.section)`\n  display: flex;\n  flex-wrap: wrap;\n`;\n\nexport const BannerImage = styled.img`\n  height: 500px;\n`;\nexport const BannerWrapper = styled.div`\n  height: 200px;\n  width: 100%;\n  overflow: hidden;\n  display: flex;\n  justify-content: center;\n  @media (max-width: 500px) {\n    height: 180px;\n  }\n`;\n","// Import the functions you need from the SDKs you need\nimport firebase from 'firebase/compat/app';\nimport 'firebase/compat/auth';\nimport 'firebase/compat/firestore';\nimport 'firebase/compat/storage';\nimport { firebaseKey as firebaseConfig } from './firebase.config';\nimport { initializeApp } from 'firebase/app';\nimport { getAnalytics } from 'firebase/analytics';\nimport Timestamp = firebase.firestore.Timestamp;\n\n// TODO: Add SDKs for Firebase products that you want to use\n// https://firebase.google.com/docs/web/setup#available-libraries\n\n// Your web app's Firebase configuration\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\n\nfirebase.initializeApp(firebaseConfig);\nconst app = initializeApp(firebaseConfig);\nexport const firebaseInstance = firebase;\nexport const dbService = firebase.firestore();\nexport const authService = firebase.auth();\nexport const getDbTime = () => console.log(Timestamp.now().seconds * 1000);\n","import { initializeApp } from 'firebase/app';\nimport { getStorage } from 'firebase/storage';\n\nexport const firebaseKey = {\n  apiKey: 'AIzaSyDrAEizOXHcCXYrQa96w6TxfddOS2Yb0tU',\n  authDomain: 'gdsc-dju.firebaseapp.com',\n  projectId: 'gdsc-dju',\n  storageBucket: 'gdsc-dju.appspot.com',\n  messagingSenderId: '487063212251',\n  appId: '1:487063212251:web:82d233e5e10f2b0aca3cfe',\n  measurementId: 'G-3B40W72HNQ',\n};\nconst app = initializeApp(firebaseKey);\n\nconst storage = getStorage(app);\n\nexport { storage, app };\n","import { getDownloadURL, ref, uploadBytesResumable } from 'firebase/storage';\nimport { storage } from '../../../firebase/firebase.config';\n\nexport const positionHandler = ({\n  value,\n  setValue,\n}: {\n  value: string | undefined;\n  setValue: (value: string) => void;\n}) => {\n  switch (value as string) {\n    case 'frontend':\n      return setValue('Frontend Developer');\n    case 'backend':\n      return setValue('Backend Developer');\n    case 'design':\n      return setValue('UX/UI Designer');\n    case 'android':\n      return setValue('Android Developer');\n    case 'beginner':\n      return setValue('Beginner Position');\n    case 'ml':\n      return setValue('Machine Learning Engineer');\n    default:\n      return;\n  }\n};\ninterface applicantDataType {\n  name: string;\n  value: string;\n}\n\nconst checkValue = ({ type, value }: { type: string; value: string }) => {\n  let validate;\n  switch (type) {\n    case 'name':\n      return (validate = /[ㄱ-ㅎ|ㅏ-ㅣ|가-힣]{2,}$/.test(value));\n    case 'phoneNumber':\n      return (validate = /^01([0|1|6|7|8|9])-?([0-9]{4})-?([0-9]{4})$/.test(\n        value,\n      ));\n    case 'email':\n      return (validate =\n        /^[0-9a-zA-Z]([-_.\\]?[0-9a-zA-Z])*@[0-9a-zA-Z]([-_.\\]?[0-9a-zA-Z])*\\.[a-zA-Z]{2,3}$/.test(\n          value,\n        ));\n    case 'gmail':\n      return (validate = /^[0-9a-zA-Z]([-_.\\]?[0-9a-zA-Z])*@gmail.com$/.test(\n        value,\n      ));\n    case 'major':\n      return (validate = /[ㄱ-ㅎ|ㅏ-ㅣ|가-힣]{4,}$/.test(value));\n    case 'studentID':\n      return (validate = /^[0-9]{8}$/.test(value));\n    case 'link':\n      return (validate = /(http(s)?:\\/\\/)([a-z0-9\\w]+\\.*)+[a-z0-9]{2,4}/gi.test(\n        value,\n      ));\n  }\n};\n\nexport const validateData = (props: applicantDataType) => {\n  const { name, value } = props;\n  switch (name) {\n    case 'name':\n      return checkValue({ type: 'name', value });\n    case 'phoneNumber':\n      return checkValue({ type: 'phoneNumber', value });\n    case 'email':\n      return checkValue({ type: 'email', value });\n    case 'gmail':\n      return checkValue({ type: 'gmail', value });\n    case 'major':\n      return checkValue({ type: 'major', value });\n    case 'studentID':\n      return checkValue({ type: 'studentID', value });\n    case 'link':\n      return checkValue({ type: 'link', value });\n    default:\n      return;\n  }\n};\nexport const errorMessage = (name: string) => {\n  switch (name) {\n    case 'name':\n      return '2글자 이상 입력해주세요';\n    case 'phoneNumber':\n      return '올바른 전화번호를 입력해주세요';\n    case 'email':\n      return '올바른 이메일을 입력해주세요';\n    case 'gmail':\n      return 'gmail 형식으로 입력해주세요.';\n    case 'major':\n      return '학과를 입력해주세요';\n    case 'studentID':\n      return '학번 8자리를 입력해주세요.';\n    case 'link':\n      return 'https:// 또는 http:// 로 시작하는 주소를 입력해주세요.';\n    default:\n      return;\n  }\n};\ninterface formDataType {\n  position: string;\n  name: string;\n  phoneNumber: string;\n  email: string;\n  major: string;\n  studentID: string;\n  link0: string;\n  placeholder: string;\n  setFormSubmit: (value: boolean) => void;\n  error: boolean;\n}\nexport const checkForm = (props: formDataType) => {\n  const {\n    position,\n    name,\n    phoneNumber,\n    email,\n    major,\n    studentID,\n    link0,\n    placeholder,\n    setFormSubmit,\n    error,\n  } = props;\n  if (\n    position &&\n    name &&\n    phoneNumber &&\n    email &&\n    major &&\n    studentID &&\n    placeholder !== '지원서/자기소개서/이력서 업로드 (PDF)' &&\n    link0 &&\n    !error\n  ) {\n    setFormSubmit(true);\n  } else {\n    setFormSubmit(false);\n  }\n};\nexport enum positionSelect {\n  frontend = 'Frontend Developer',\n  backend = 'Backend Developer',\n  design = 'UX/UI Designer',\n  android = 'Android Developer',\n  beginner = 'Beginner Position',\n  ml = 'Machine Learning Engineer',\n}\n","import styled, { css } from 'styled-components';\n\nexport const FormTopMargin = styled.div`\n  height: 90px;\n`;\nexport const FormMargin = styled.div`\n  height: 50px;\n`;\nexport const FormMarginS = styled.div`\n  height: 30px;\n`;\nexport const FormMarginXS = styled.div`\n  height: 15px;\n`;\nexport const RecruitFormWrapper = styled.div`\n  max-width: 512px;\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  margin: 0 auto;\n`;\nexport const RecruitFormInner = styled.section`\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n`;\nexport const FormLabel = styled.label<{ essential?: boolean }>`\n  padding: 5px 0;\n  display: inline-block;\n  font-size: ${(props) => props.theme.fontSize.body2};\n  font-weight: 400;\n  line-height: 1.5;\n  color: ${(props) => props.theme.color.grey700};\n   {\n    ${(props) =>\n      props.essential &&\n      css`\n        &::after {\n          display: inline-block;\n          margin: 0 0 2px 6px;\n          content: '';\n          width: 6px;\n          height: 6px;\n          background-color: ${(props) => props.theme.color.tossRed};\n          border-radius: 3px;\n        }\n      `}\n  }\n`;\nexport const FormText = styled.p`\n  margin-top: 4px;\n  font-size: 15px;\n  line-height: 24px;\n  font-weight: 300;\n  color: ${(props) => props.theme.color.grey600};\n`;\nexport const FormLi = styled.li`\n  margin-top: 4px;\n  position: relative;\n  font-size: 15px;\n  padding-left: 15px;\n  font-weight: 300;\n  color: ${(props) => props.theme.color.grey600};\n  list-style: none;\n  &::before {\n    position: absolute;\n    top: -2px;\n    left: -5px;\n    display: inline-block;\n    width: 16px;\n    height: 16px;\n    font-size: 1.6rem;\n    font-weight: bold;\n    line-height: 23px;\n    color: ${(props) => props.theme.color.tossBlue};\n    text-align: center;\n    content: '•';\n  }\n`;\nexport const FormArticleWrapper = styled.article`\n  border: 1px solid ${(props) => props.theme.color.grey300};\n  padding: 10px 20px;\n  border-radius: 4px;\n  background-color: ${(props) => props.theme.color.grey50};\n  margin-top: 10px;\n  margin-bottom: 30px;\n`;\nexport const FormSubmitButton = styled.button<{ disable?: boolean }>`\n  padding: 18px 20px;\n  min-width: 100px;\n  border: none;\n  color: white;\n  align-items: center;\n  text-align: center;\n  justify-content: center;\n  width: 25%;\n  font-size: ${(props) => props.theme.fontSize.body2};\n  border-radius: 10px;\n  cursor: pointer;\n  background: ${(props) => props.theme.color.tossBlueActive};\n\n  ${(prop) =>\n    prop.disable &&\n    css`\n      background: ${(props) => props.theme.color.tossBlue200};\n      cursor: not-allowed;\n    `}\n`;\n","import { Field } from 'formik';\nimport styled, { css } from 'styled-components';\n\nexport const StyledInput = styled(Field)<{ disabled?: boolean }>`\n  padding: 0 18px;\n  margin: 2px 0;\n  border: 0;\n  border-radius: 10px;\n  height: 48px;\n  font-size: ${(props) => props.theme.fontSize.body1};\n  outline: none;\n  flex-grow: 1;\n  background: none;\n  font-weight: 400;\n  color: ${(props) => props.theme.color.grey700};\n  &::placeholder {\n    color: ${(props) => props.theme.color.grey400};\n    font-weight: 300;\n  }\n  ${(props) =>\n    props.disabled &&\n    css`\n      background: ${(props) => props.theme.color.grey100};\n      color: ${(props) => props.theme.color.grey400};\n    `}\n`;\nexport const StyledFileInput = styled.div`\n  color: ${(props) => props.theme.color.grey500};\n  cursor: pointer;\n  overflow: hidden;\n  white-space: nowrap;\n  flex-grow: 1;\n  font-weight: 300;\n  font-size: ${(props) => props.theme.fontSize.body1};\n  padding: 0 18px;\n`;\n\nexport const StyledInputWrapper = styled.div<{\n  color?: string;\n  disabled?: boolean;\n  error?: boolean;\n}>`\n  overflow: hidden;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin: 1px auto 0;\n  height: 48px;\n  background: #fff;\n  border: solid 0;\n  border-radius: 10px;\n  box-sizing: border-box;\n  box-shadow: inset 0 0 0 1px ${(props) => props.theme.color.grey300};\n  ${(props) =>\n    props.error &&\n    css`\n      box-shadow: inset 0 0 0 2px ${props.theme.color.tossRed};\n    `}\n  transition: 0.3s;\n  &:hover {\n    box-shadow: inset 0 0 0 2px ${(props) => props.theme.color.tossBlue200};\n    ${(props) =>\n      props.error &&\n      css`\n        box-shadow: inset 0 0 0 2px ${props.theme.color.tossRed};\n      `}\n  }\n  .formInput:focus {\n    box-sizing: border-box;\n    box-shadow: inset 0 0 0 2px ${(props) => props.theme.color.tossBlue500};\n    ${(props) =>\n      props.error &&\n      css`\n        box-shadow: inset 0 0 0 2px ${props.theme.color.tossRed};\n      `}\n  }\n  ${(props) =>\n    !props.disabled &&\n    css`\n      &:hover {\n        box-shadow: none;\n      }\n    `}\n`;\nexport const InputImageWrapper = styled.div`\n  height: 20px;\n  width: 20px;\n  margin: 0 -8px 0 18px;\n  display: flex;\n  align-items: center;\n`;\nexport const ErrorBox = styled.div`\n  height: 20px;\n  display: flex;\n  align-items: center;\n  color: ${(props) => props.theme.color.tossRed};\n  font-size: ${(props) => props.theme.fontSize.body2};\n  padding-left: 5px;\n`;\n","import React, { memo, useEffect, useState } from 'react';\n\nimport { ErrorBox, StyledInput, StyledInputWrapper } from './styled';\nimport { FormikErrors, FormikTouched } from 'formik';\n\nexport interface Iprops {\n  name?: string;\n  error?:\n    | string\n    | string[]\n    | FormikErrors<any>\n    | FormikErrors<any>[]\n    | undefined;\n  touched?: boolean | FormikTouched<any> | FormikTouched<any>[] | undefined;\n  placeholder?: string;\n  image?: string;\n  file?: boolean;\n  onChange?: (e: any) => void;\n  type?: string;\n  value?: string | null;\n  checkError?: (props: boolean) => void;\n  disabled?: boolean;\n}\nconst TextInput = (props: Iprops) => {\n  const { name, placeholder, onChange, type, disabled, error, touched } = props;\n  const errorToggle = !!(error && touched);\n  return (\n    <>\n      <StyledInputWrapper error={errorToggle} disabled={!disabled}>\n        <StyledInput\n          className={'formInput'}\n          name={name}\n          type={type}\n          onChange={onChange && onChange}\n          placeholder={placeholder}\n          disabled={disabled}\n        />\n      </StyledInputWrapper>\n      <ErrorBox>{error && touched && <>{error}</>}</ErrorBox>\n    </>\n  );\n};\n\nexport default memo(TextInput);\n","import { useFormik } from 'formik';\nimport * as Yup from 'yup';\nexport const nameSchema = {\n  name: Yup.string()\n    .min(2, '이름 전체를 입력해주세요.')\n    .matches(/[ㄱ-ㅎ|ㅏ-ㅣ|가-힣]/, '한글만 입력 가능합니다.')\n    .required('필수입력란입니다.'),\n};\nexport const nicknameSchema = {\n  nickname: Yup.string()\n    .min(3, '3글자이상 작성해주세요')\n    .max(15, '2~15사이의 길이로 입력해주세요')\n    .matches(/^[A-Z]/, '대문자로 시작해야합니다.')\n    // .notOneOf(nicknameList ? nicknameList : [], '중복된 닉네임입니다.')\n    .required('필수입력란입니다.'),\n};\nexport const introduceSchema = {\n  introduce: Yup.string()\n    .min(10, '10글자 이상 작성해주세요')\n    .max(70, '최대 70자 입니다.')\n    .required('필수입력란입니다.'),\n};\nexport const hashTagSchema = {\n  hashTag: Yup.string()\n    .min(10, '10글자 이상 작성해주세요')\n    .required('필수입력란입니다.'),\n};\nexport const phoneNumberSchema = {\n  phoneNumber: Yup.string()\n    .matches(\n      /^01([0|1|6|7|8|9])-?([0-9]{4})-?([0-9]{4})$/,\n      '전화번호 형식에 맞춰 입력해주세요',\n    )\n    .required('필수입력란입니다.'),\n};\nexport const emailSchema = {\n  email: Yup.string()\n    .min(4, '필수입력란입니다.')\n    .matches(\n      /^[A-Z0-9._%+-]+@[gmail]+\\.[A-Z]{3}$/i,\n      'gmail.com형식으로 작성해주세요',\n    )\n    .required('필수입력란입니다.'),\n};\nexport const majorSchema = {\n  major: Yup.string()\n    .min(3, '3글자 이상 작성해주세요')\n    .matches(/[ㄱ-ㅎ|ㅏ-ㅣ|가-힣]/, '한글만 입력 가능합니다.')\n    .required('필수입력란입니다.'),\n};\nexport const studentIDSchema = {\n  studentID: Yup.string()\n    .matches(/^[0-9]{8}$/, '학번 형식에 맞춰 입력해주세요')\n    .required('필수입력란입니다.'),\n};\nexport const gitEmailSchema = {\n  gitEmail: Yup.string().matches(\n    /^[0-9a-zA-Z]([-_.]?[0-9a-zA-Z])*@[0-9a-zA-Z]([-_.]?[0-9a-zA-Z])*.[a-zA-Z]{2,3}$/,\n    '이메일 형식으로 작성해주세요',\n  ),\n};\nexport const gitLinkSchema = {\n  gitEmail: Yup.string().matches(\n    /(http(s)?:\\/\\/)+(github)+\\.+(com\\/)+[A-Z,a-z]/,\n    'github.com 형식으로 작성해주세요',\n  ),\n};\nexport const urlsSchema = {\n  memberPortfolioUrls: Yup.string().matches(\n    /(http(s)?:\\/\\/)([a-z0-9\\w]+\\.*)+[a-z0-9]{2,4}/,\n    'http/https 형식으로 작성해주세요',\n  ),\n};\nexport const urlValidation = Yup.string().matches(\n  /(http(s)?:\\/\\/)([a-z0-9\\w]+\\.*)+[a-z0-9]{2,4}/,\n  'http/https 형식으로 작성해주세요',\n);\n\nexport const recruitFormSchema = Yup.object().shape({\n  ...nameSchema,\n  ...phoneNumberSchema,\n  ...emailSchema,\n  ...majorSchema,\n  ...studentIDSchema,\n  link0: urlValidation,\n  link1: urlValidation,\n});\n","import React from 'react';\n\nconst Folder = () => {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      viewBox=\"0 0 24 24\"\n      className=\"line-icon\"\n    >\n      <path\n        d=\"M20 4.7h-7.6l-1.7-2.3c-.5-.7-1.3-1.1-2.2-1.1H4c-1.2 0-2.2 1-2.2 2.2v15.9c0 1.2 1 2.2 2.2 2.2h16c1.2 0 2.2-1 2.2-2.2V6.9c0-1.2-1-2.2-2.2-2.2zM3.2 3.6c0-.4.3-.8.8-.8h4.5c.4 0 .8.2 1 .5l1 1.4H3.2V3.6zm17.6 15.9c0 .4-.3.7-.8.7H4c-.4 0-.8-.3-.8-.7V6.2H20c.4 0 .8.3.8.7v12.6z\"\n        fill=\"#6b7684\"\n      ></path>\n    </svg>\n  );\n};\n\nexport default Folder;\n","import React, { forwardRef, useState } from 'react';\nimport Folder from '../../../../img/Folder';\nimport {\n  InputImageWrapper,\n  StyledFileInput,\n  StyledInputWrapper,\n} from '../TextInput/styled';\n\nexport interface Iprops {\n  defaultPlaceholder: string;\n  uploadFiles?: (file: HTMLInputElement) => void;\n  errorToggle?: boolean;\n  disabled?: boolean;\n}\n\nconst FileInput = (props: Iprops, ref: any) => {\n  const { defaultPlaceholder, uploadFiles, errorToggle, disabled } = props;\n  const [placeholder, setPlaceholder] = useState(\n    defaultPlaceholder || 'Choose a file',\n  );\n\n  console.log(ref.current?.files);\n  return (\n    <StyledInputWrapper error={errorToggle} disabled={!disabled}>\n      <InputImageWrapper>\n        <Folder />\n      </InputImageWrapper>\n      <StyledFileInput\n        onClick={() => {\n          ref.current?.click();\n        }}\n      >\n        {placeholder}\n      </StyledFileInput>\n      <input\n        ref={ref}\n        type={'file'}\n        style={{ display: 'none' }}\n        name={'fileName'}\n        onChange={(e) => {\n          e.target.files && setPlaceholder(e.target.files[0].name);\n        }}\n      />\n    </StyledInputWrapper>\n  );\n};\n\nexport default forwardRef(FileInput);\n","import React, {\n  memo,\n  useEffect,\n  useLayoutEffect,\n  useRef,\n  useState,\n} from 'react';\nimport { SubTitle, Title } from '../../../components/common/Title/title';\nimport { ContainerInner, LayoutContainer } from '../../../styles/layouts';\nimport {\n  FormArticleWrapper,\n  FormLabel,\n  FormLi,\n  FormMargin,\n  FormMarginXS,\n  FormSubmitButton,\n  FormText,\n  RecruitFormInner,\n  RecruitFormWrapper,\n} from './styled';\nimport TextInput from '../../../components/common/input/TextInput';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport { positionSelect } from './FormFunctions';\nimport { getDownloadURL, ref, uploadBytesResumable } from 'firebase/storage';\nimport { storage } from '../../../firebase/firebase.config';\nimport { dbService } from '../../../firebase/firebase';\nimport { useRecoilState } from 'recoil';\nimport { loaderState } from '../../../store/loader';\nimport { alertState } from '../../../store/alert';\nimport { FormikProvider, useFormik } from 'formik';\nimport { recruitFormSchema } from '../../../components/Validation/profileEdit';\nimport FileInput from '../../../components/common/input/FileInput';\n\nconst RecruitForm = () => {\n  const { id } = useParams();\n  const [position, setPosition] = useState('');\n  const [loading, setLoading] = useRecoilState(loaderState);\n  const [alerts, setAlerts] = useRecoilState(alertState);\n  const [uploadProgress, setUploadProgress] = useState(0);\n  const onSubmit = async () => {\n    {\n      input.current && (await uploadFiles(input.current));\n    }\n  };\n  const input = useRef<HTMLInputElement>(null);\n  const navigate = useNavigate();\n  const recruitItem = {\n    uploadDate: new Date(),\n    name: '',\n    phoneNumber: '',\n    email: '',\n    major: '',\n    studentID: '',\n    position: positionSelect[id as keyof typeof positionSelect],\n    link0: '',\n    link1: '',\n    fileURL: '',\n  };\n  const recruitFormik = useFormik({\n    initialValues: recruitItem,\n    onSubmit: () => {\n      return;\n    },\n    validationSchema: recruitFormSchema,\n  });\n  useLayoutEffect(() => {\n    setPosition(positionSelect[id as keyof typeof positionSelect]);\n  }, [id]);\n  const uploadFiles = async (data: HTMLInputElement) => {\n    if (data.files !== null) {\n      const file = data.files[0];\n      console.log(data.files);\n      if (!file) return;\n      if (file.size > 50000001) {\n        alert('파일 사이즈는 50MB 이하로 선택해주세요.');\n        return;\n      }\n      if (file.type !== 'application/pdf') {\n        alert('PDF 파일만 업로드 가능합니다.');\n        return 0;\n      } else {\n        setLoading({ ...loading, load: true });\n        const storageRef = ref(storage, `${file.name}`);\n        const uploadTask = uploadBytesResumable(storageRef, file);\n        await uploadTask.on('state_changed', (snapshot: any) => {\n          const progress = Math.round(\n            (snapshot.bytesTransferred / snapshot.totalBytes) * 100,\n          );\n          setUploadProgress(progress);\n        }),\n          uploadTask.then(() => {\n            getDownloadURL(storageRef).then(async (url: string) => {\n              console.log(url);\n              await dbService\n                .collection('applicants')\n                .doc()\n                .set({\n                  ...recruitItem,\n                  fileURL: url,\n                });\n              setLoading({ ...loading, load: false });\n              setAlerts({\n                ...alerts,\n                alertHandle: true,\n                alertMessage: `${position}에 지원이 완료되었습니다.`,\n              });\n              navigate(-1);\n            });\n          });\n      }\n    }\n  };\n  const requiredSchema = !!(\n    recruitFormik.values.email &&\n    recruitFormik.values.name &&\n    recruitFormik.values.phoneNumber &&\n    recruitFormik.values.major &&\n    recruitFormik.values.studentID &&\n    recruitFormik.values.position &&\n    recruitFormik.values.link0.length > 0 &&\n    input.current?.files\n  );\n  console.log('requiredSchema: ' + requiredSchema);\n  console.log('isValid: ' + recruitFormik.isValid);\n  console.log(recruitFormik.isValid && requiredSchema);\n  //있어야함\n  return (\n    <>\n      <LayoutContainer>\n        <ContainerInner>\n          <FormMargin />\n          <FormikProvider value={recruitFormik}>\n            <RecruitFormWrapper>\n              <RecruitFormInner>\n                <Title>지원서 작성하기</Title>\n                <SubTitle>{position}</SubTitle>\n                <FormMargin />\n                <div>\n                  <FormLabel essential={true}>이름(실명)</FormLabel>\n                  <TextInput\n                    placeholder={'김구글'}\n                    name={'name'}\n                    value={recruitFormik.values.name}\n                    onChange={recruitFormik.handleChange}\n                    touched={recruitFormik.touched.name}\n                    error={recruitFormik.errors.name}\n                  />\n                </div>\n\n                <div>\n                  <FormLabel essential={true}>전화번호</FormLabel>\n                  <TextInput\n                    placeholder={'010-0000-0000'}\n                    name={'phoneNumber'}\n                    value={recruitFormik.values.phoneNumber}\n                    onChange={recruitFormik.handleChange}\n                    touched={recruitFormik.touched.phoneNumber}\n                    error={recruitFormik.errors.phoneNumber}\n                  />\n                </div>\n\n                <div>\n                  <FormLabel essential={true}>이메일(gmail)</FormLabel>\n                  <TextInput\n                    placeholder={'googledev@gmail.com'}\n                    name={'email'}\n                    value={recruitFormik.values.email}\n                    onChange={recruitFormik.handleChange}\n                    touched={recruitFormik.touched.email}\n                    error={recruitFormik.errors.email}\n                  />\n                </div>\n                <div>\n                  <FormLabel essential={true}>학과</FormLabel>\n                  <TextInput\n                    placeholder={'구글개발학과'}\n                    name={'major'}\n                    value={recruitFormik.values.major}\n                    onChange={recruitFormik.handleChange}\n                    touched={recruitFormik.touched.major}\n                    error={recruitFormik.errors.major}\n                  />\n                </div>\n\n                <div>\n                  <FormLabel essential={true}>학번</FormLabel>\n                  <TextInput\n                    placeholder={'20221234'}\n                    name={'studentID'}\n                    value={recruitFormik.values.studentID}\n                    onChange={recruitFormik.handleChange}\n                    touched={recruitFormik.touched.studentID}\n                    error={recruitFormik.errors.studentID}\n                  />\n                </div>\n                <div>\n                  <FormLabel essential={true}>포지션</FormLabel>\n                  <TextInput\n                    disabled={true}\n                    name={'position'}\n                    placeholder={position}\n                  />\n                </div>\n\n\n                <div>\n                  <FormLabel essential={true}>지원서</FormLabel>\n                  <FileInput\n                    defaultPlaceholder={'지원서 / 포트폴리오 PDF'}\n                    ref={input}\n                  />\n                  <FormText>\n                    * 파일은 최대 50MB로 업로드 하실 수 있습니다.\n                  </FormText>\n                  <FormText>\n                    * 원활한 검토를 위해 PDF 형식으로 제출해주세요.\n                  </FormText>\n                  <FormText>\n                    * 지원서는 자유 양식이며 아래 항목을 포함하여 제출해주세요.\n                  </FormText>\n                  <FormArticleWrapper>\n                    <FormLi>활용할 수 있는 기술스택을 알려주세요.</FormLi>\n                    <FormLi>\n                      프로젝트 협업 경험이 있다면 자세하게 알려주세요.\n                    </FormLi>\n                    <FormLi>\n                      팀 리드 해보신 경험과 어떤 리드가 좋은 리드라고\n                      생각하시는지 알려주세요.\n                    </FormLi>\n                    <FormLi>\n                      팀원과 갈등상황은 어떻게 해결하시나요? 커뮤니케이션 방식을\n                      알려주세요.\n                    </FormLi>\n                    <FormLi>\n                      본인만의 공부방법이 있다면 어떤 것이 있나요? 이뤄낸 성과가\n                      있다면 자세히 알려주세요.\n                    </FormLi>\n                  </FormArticleWrapper>\n                </div>\n                <div>\n                  <FormLabel essential={true}>링크 1</FormLabel>\n                  <TextInput\n                    placeholder={'https://'}\n                    name={'link0'}\n                    value={recruitFormik.values.link0}\n                    onChange={recruitFormik.handleChange}\n                    touched={recruitFormik.touched.link0}\n                    error={recruitFormik.errors.link0}\n                  />\n                  <FormMarginXS />\n                  <FormLabel>링크 2 (선택사항)</FormLabel>\n                  <TextInput\n                    placeholder={'https://'}\n                    name={'link1'}\n                    value={recruitFormik.values.link1}\n                    onChange={recruitFormik.handleChange}\n                    touched={recruitFormik.touched.link1}\n                    error={recruitFormik.errors.link1}\n                  />\n                  <FormText>\n                    자신을 잘 나타낼 수 있는 개인블로그, 노션, Github링크 등을\n                    입력해주세요.\n                  </FormText>\n                  <FormText>\n                    *포트폴리오를 업로드하셔야할 경우 클라우드/드라이브에 파일을\n                    업로드 후 공유링크를 입력해주세요.\n                  </FormText>\n                </div>\n                <FormMargin />\n                <FormSubmitButton\n                  onClick={() => onSubmit()}\n                  disable={!(recruitFormik.isValid && requiredSchema)}\n                >\n                  제출하기\n                </FormSubmitButton>\n                <FormMargin />\n              </RecruitFormInner>\n            </RecruitFormWrapper>\n          </FormikProvider>\n        </ContainerInner>\n      </LayoutContainer>\n    </>\n  );\n};\n\nexport default memo(RecruitForm);\n"],"sourceRoot":""}