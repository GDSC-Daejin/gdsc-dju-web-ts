{"version":3,"sources":["store/modal.ts","firebase/firebase.tsx","components/common/Button/styled.ts","firebase/firebase.config.ts","pages/Recruit/RecruitForm/FormFunctions.ts","components/common/input/TextInput/styled.ts","components/common/input/TextInput/index.tsx","components/Validation/profileEdit.ts","img/Folder.tsx","components/common/input/FileInput/index.tsx","components/common/Modal/ApplyModal/styled.ts","components/common/Button/index.tsx","utils/OutsideClickHandler.tsx","components/common/Modal/ApplyModal/index.tsx","pages/Recruit/RecruitForm/index.tsx"],"names":["MODAL_KEY","ADMIN_SIGN_IN","ADMIN_SIGN_UP","ADMIN_SET_PROFILE","ADMIN_EDIT_MEMBER","MEMBER_CARD","APPLY_CHECK","ModalState","modalState","atom","key","default","firebase","firestore","Timestamp","initializeApp","firebaseConfig","dbService","authService","auth","StyledButton","styled","button","props","theme","color","tossBlue","fontSize","body2","disable","css","tossBlue200","StyledButtonX","grey300","border","size","background","firebaseKey","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","app","storage","getStorage","positionSelect","StyledInput","Field","body1","grey700","grey400","disabled","grey100","StyledFileInput","div","grey500","StyledInputWrapper","error","tossRed","tossBlue500","InputImageWrapper","ErrorBox","TextInput","name","placeholder","onChange","type","errorToggle","touched","undefined","className","memo","nameSchema","Yup","min","matches","required","phoneNumberSchema","max","phoneNumber","emailSchema","email","majorSchema","major","studentIDSchema","studentID","urlValidation","recruitFormSchema","shape","link0","link1","Folder","xmlns","viewBox","d","fill","FileInput","ref","defaultPlaceholder","uploadFiles","useState","setPlaceholder","onClick","current","click","style","display","e","target","files","forwardRef","ApplyModalInnerWrapper","ApplyButtonWrapper","ApplyModalP","p","grey600","ApplyModalTitle","h5","h6","grey900","ApplyModalInner","motion","ApplyModalWrapper","ApplyModalButtonWrapper","colorStyle","GDSCButton","text","OutsideClickHandler","children","outsideClick","trigger","useRef","handleClick","useCallback","contains","useEffect","setTimeout","document","addEventListener","removeEventListener","ApplyModal","position","useRecoilState","modal","setModal","AnimatePresence","applyCheck","initial","opacity","exit","animate","variants","active","scale","y","unActive","transition","duration","RecruitForm","id","useParams","setPosition","loaderState","loading","setLoading","setUploadProgress","input","navigate","useNavigate","recruitItem","uploadDate","Date","fileURL","recruitFormik","useFormik","initialValues","onSubmit","validationSchema","uploadApplicantFile","storageRef","file","object","uploadBytesResumable","then","getDownloadURL","url","a","collection","doc","set","checkFile","fileList","alert","Math","floor","typeName","replace","data","File","load","uploadTask","on","snapshot","progress","total","bytesTransferred","totalBytes","round","values","console","log","requiredSchema","length","useLayoutEffect","value","essential","handleChange","errors","isValid"],"mappings":"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","file":"static/js/15.ea5203f5.chunk.js","sourcesContent":["import { atom } from 'recoil';\n\nexport const MODAL = 'Modal';\n\nexport const MODAL_KEY = {\n  ADMIN_SIGN_IN: 'adminSignIn',\n  ADMIN_SIGN_UP: 'adminSignUp',\n  ADMIN_SET_PROFILE: 'adminSetProfile',\n  ADMIN_EDIT_MEMBER: 'adminEditMember',\n  MEMBER_CARD: 'memberCard',\n  APPLY_CHECK: 'applyCheck',\n} as const;\n\nexport const ModalState = {\n  [MODAL_KEY.ADMIN_SIGN_IN]: false,\n  [MODAL_KEY.ADMIN_SIGN_UP]: false,\n  [MODAL_KEY.ADMIN_SET_PROFILE]: false,\n  [MODAL_KEY.ADMIN_EDIT_MEMBER]: false,\n  [MODAL_KEY.MEMBER_CARD]: false,\n  [MODAL_KEY.APPLY_CHECK]: false,\n  selectedId: 0,\n};\nexport const modalState = atom<typeof ModalState>({\n  key: MODAL,\n  default: ModalState,\n});\n","// Import the functions you need from the SDKs you need\nimport firebase from 'firebase/compat/app';\nimport 'firebase/compat/auth';\nimport 'firebase/compat/firestore';\nimport 'firebase/compat/storage';\nimport { firebaseKey as firebaseConfig } from './firebase.config';\nimport { initializeApp } from 'firebase/app';\nimport { getAnalytics } from 'firebase/analytics';\nimport Timestamp = firebase.firestore.Timestamp;\n\n// TODO: Add SDKs for Firebase products that you want to use\n// https://firebase.google.com/docs/web/setup#available-libraries\n\n// Your web app's Firebase configuration\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\n\nfirebase.initializeApp(firebaseConfig);\nconst app = initializeApp(firebaseConfig);\nexport const firebaseInstance = firebase;\nexport const dbService = firebase.firestore();\nexport const authService = firebase.auth();\nexport const getDbTime = () => console.log(Timestamp.now().seconds * 1000);\n","import styled, { css } from 'styled-components';\n\nexport const StyledButton = styled.button<{ disable?: boolean }>`\n  color: white;\n  width: 100%;\n  padding: 12px 0px;\n  border-radius: 10px;\n  border-width: 1px;\n  border-color: ${(props) => props.theme.color.tossBlue};\n  border-style: inherit;\n  margin-bottom: 10px;\n  background: ${(props) => props.theme.color.tossBlue};\n  font-size: ${(props) => props.theme.fontSize.body2};\n  cursor: pointer;\n  ${(props) =>\n    props.disable &&\n    css`\n      cursor: not-allowed;\n      background: ${(props) => props.theme.color.tossBlue200};\n    `}\n`;\n\nexport const StyledButtonX = styled.button<{\n  color?: string;\n  background?: string;\n  size?: string;\n  disable?: boolean;\n  border?: string;\n}>`\n  display: flex;\n  align-items: center;\n  border: 1px solid ${(props) => props.theme.color.grey300};\n  ${(props) =>\n    props.border &&\n    css`\n      border: 1px solid ${props.border};\n    `}\n  padding: 8px 20px;\n  cursor: pointer;\n  font-size: ${(props) => props.theme.fontSize.body2};\n  color: ${(props) => props.color};\n  ${(props) =>\n    props.disable &&\n    css`\n      cursor: not-allowed;\n      opacity: 0.5;\n    `}\n  ${(props) =>\n    props.size === 'large' &&\n    css`\n      padding: 8px 86px;\n    `}\n  box-shadow: 0 2px 12px rgba(25, 31, 40, 0.08);\n  border-radius: 10px;\n  background: ${(props) => props.background};\n`;\n","import { initializeApp } from 'firebase/app';\nimport { getStorage } from 'firebase/storage';\n\nexport const firebaseKey = {\n  apiKey: 'AIzaSyDrAEizOXHcCXYrQa96w6TxfddOS2Yb0tU',\n  authDomain: 'gdsc-dju.firebaseapp.com',\n  projectId: 'gdsc-dju',\n  storageBucket: 'gdsc-dju.appspot.com',\n  messagingSenderId: '487063212251',\n  appId: '1:487063212251:web:82d233e5e10f2b0aca3cfe',\n  measurementId: 'G-3B40W72HNQ',\n};\nconst app = initializeApp(firebaseKey);\n\nconst storage = getStorage(app);\n\nexport { storage, app };\n","export enum positionSelect {\n  frontend = 'Frontend Developer',\n  backend = 'Backend Developer',\n  design = 'UX/UI Designer',\n  android = 'Android Developer',\n  beginner = 'Beginner Position',\n  ml = 'Machine Learning Engineer',\n}\n","import { Field } from 'formik';\nimport styled, { css } from 'styled-components';\n\nexport const StyledInput = styled(Field)<{ disabled?: boolean }>`\n  padding: 0 18px;\n  margin: 2px 0;\n  border: 0;\n  border-radius: 10px;\n  height: 48px;\n  font-size: ${(props) => props.theme.fontSize.body1};\n  outline: none;\n  flex-grow: 1;\n  background: none;\n  font-weight: 400;\n  color: ${(props) => props.theme.color.grey700};\n  &::placeholder {\n    color: ${(props) => props.theme.color.grey400};\n    font-weight: 300;\n  }\n  ${(props) =>\n    props.disabled &&\n    css`\n      background: ${(props) => props.theme.color.grey100};\n      color: ${(props) => props.theme.color.grey400};\n    `}\n`;\nexport const StyledFileInput = styled.div`\n  color: ${(props) => props.theme.color.grey500};\n  cursor: pointer;\n  overflow: hidden;\n  white-space: nowrap;\n  flex-grow: 1;\n  font-weight: 300;\n  font-size: ${(props) => props.theme.fontSize.body1};\n  padding: 0 18px;\n`;\n\nexport const StyledInputWrapper = styled.div<{\n  color?: string;\n  disabled?: boolean;\n  error?: boolean;\n}>`\n  overflow: hidden;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin: 1px auto 0;\n  height: 48px;\n  background: #fff;\n  border: solid 0;\n  border-radius: 10px;\n  box-sizing: border-box;\n  box-shadow: inset 0 0 0 1px ${(props) => props.theme.color.grey300};\n\n  &:hover {\n    box-shadow: inset 0 0 0 2px ${(props) => props.theme.color.tossBlue200};\n    ${(props) =>\n      props.error &&\n      css`\n        box-shadow: inset 0 0 0 2px ${props.theme.color.tossRed};\n      `}\n  }\n  .formInput:focus {\n    box-sizing: border-box;\n    box-shadow: inset 0 0 0 2px ${(props) => props.theme.color.tossBlue500};\n    ${(props) =>\n      props.error &&\n      css`\n        box-shadow: inset 0 0 0 2px ${props.theme.color.tossRed}!important;\n      `}\n  }\n  ${(props) =>\n    !props.disabled &&\n    css`\n      &:hover {\n        box-shadow: none;\n      }\n    `}\n  ${(props) =>\n    props.error &&\n    css`\n      box-shadow: inset 0 0 0 2px ${props.theme.color.tossRed};\n    `}\n  transition: 0.3s;\n`;\nexport const InputImageWrapper = styled.div`\n  height: 20px;\n  width: 20px;\n  margin: 0 -8px 0 18px;\n  display: flex;\n  align-items: center;\n`;\nexport const ErrorBox = styled.div`\n  height: 20px;\n  display: flex;\n  align-items: center;\n  color: ${(props) => props.theme.color.tossRed};\n  font-size: ${(props) => props.theme.fontSize.body2};\n  padding-left: 5px;\n`;\n","import React, { memo, useEffect, useState } from 'react';\n\nimport { ErrorBox, StyledInput, StyledInputWrapper } from './styled';\nimport { FormikErrors, FormikTouched } from 'formik';\n\nexport interface Iprops {\n  name?: string;\n  error?:\n    | string\n    | string[]\n    | FormikErrors<any>\n    | FormikErrors<any>[]\n    | undefined;\n  touched?: boolean | FormikTouched<any> | FormikTouched<any>[] | undefined;\n  placeholder?: string;\n  image?: string;\n  file?: boolean;\n  onChange?: (e: any) => void;\n  type?: string;\n  value?: string | null;\n  checkError?: (props: boolean) => void;\n  disabled?: boolean;\n}\nconst TextInput = (props: Iprops) => {\n  const { name, placeholder, onChange, type, disabled, error, touched } = props;\n  const errorToggle = error != undefined && error != '필수입력란입니다.';\n  return (\n    <>\n      <StyledInputWrapper error={errorToggle} disabled={!disabled}>\n        <StyledInput\n          className={'formInput'}\n          name={name}\n          type={type}\n          onChange={onChange && onChange}\n          placeholder={placeholder}\n          disabled={disabled}\n        />\n      </StyledInputWrapper>\n      <ErrorBox>{errorToggle && <>{error}</>}</ErrorBox>\n    </>\n  );\n};\n\nexport default memo(TextInput);\n","import { useFormik } from 'formik';\nimport * as Yup from 'yup';\nexport const nameSchema = {\n  name: Yup.string()\n    .min(2, '이름 전체를 입력해주세요.')\n    .matches(/^[ㄱ-ㅎ|가-힣]/g, '한글만 입력 가능합니다.')\n    .required('필수입력란입니다.'),\n};\nexport const nicknameSchema = {\n  nickname: Yup.string()\n    .min(3, '3글자이상 작성해주세요')\n    .max(15, '2~15사이의 길이로 입력해주세요')\n    .matches(/^[A-Z]/, '대문자로 시작해야합니다.')\n    // .notOneOf(nicknameList ? nicknameList : [], '중복된 닉네임입니다.')\n    .required('필수입력란입니다.'),\n};\nexport const introduceSchema = {\n  introduce: Yup.string()\n    .min(10, '10글자 이상 작성해주세요')\n    .max(70, '최대 70자 입니다.')\n    .required('필수입력란입니다.'),\n};\nexport const hashTagSchema = {\n  hashTag: Yup.string()\n    .min(10, '10글자 이상 작성해주세요')\n    .required('필수입력란입니다.'),\n};\nexport const phoneNumberSchema = {\n  phoneNumber: Yup.string()\n    .matches(\n      /^01([0|1|6|7|8|9])-?([0-9]{4})-?([0-9]{4})$/,\n      '전화번호 형식에 맞춰 입력해주세요',\n    )\n    .required('필수입력란입니다.'),\n};\nexport const emailSchema = {\n  email: Yup.string()\n    .min(4, '필수입력란입니다.')\n    .matches(\n      /^[A-Z0-9._%+-]+@[gmail]+\\.[A-Z]{3}$/i,\n      'gmail.com형식으로 작성해주세요',\n    )\n    .required('필수입력란입니다.'),\n};\nexport const majorSchema = {\n  major: Yup.string()\n    .min(3, '3글자 이상 작성해주세요')\n    .matches(/[ㄱ-ㅎ|ㅏ-ㅣ|가-힣]/, '한글만 입력 가능합니다.')\n    .required('필수입력란입니다.'),\n};\nexport const studentIDSchema = {\n  studentID: Yup.string()\n    .matches(/^[0-9]{8}$/, '학번 형식에 맞춰 입력해주세요')\n    .required('필수입력란입니다.'),\n};\nexport const gitEmailSchema = {\n  gitEmail: Yup.string().matches(\n    /^[0-9a-zA-Z]([-_.]?[0-9a-zA-Z])*@[0-9a-zA-Z]([-_.]?[0-9a-zA-Z])*.[a-zA-Z]{2,3}$/,\n    '이메일 형식으로 작성해주세요',\n  ),\n};\nexport const gitLinkSchema = {\n  gitEmail: Yup.string().matches(\n    /(http(s)?:\\/\\/)+(github)+\\.+(com\\/)+[A-Z,a-z]/,\n    'github.com 형식으로 작성해주세요',\n  ),\n};\nexport const urlsSchema = {\n  memberPortfolioUrls: Yup.string().matches(\n    /(http(s)?:\\/\\/)([a-z0-9\\w]+\\.*)+[a-z0-9]{2,4}/,\n    'http/https 형식으로 작성해주세요',\n  ),\n};\nexport const urlValidation = Yup.string().matches(\n  /(http(s)?:\\/\\/)([a-z0-9\\w]+\\.*)+[a-z0-9]{2,4}/,\n  'http/https 형식으로 작성해주세요',\n);\n\nexport const recruitFormSchema = Yup.object().shape({\n  ...nameSchema,\n  ...phoneNumberSchema,\n  ...emailSchema,\n  ...majorSchema,\n  ...studentIDSchema,\n  link0: urlValidation,\n  link1: urlValidation,\n});\n","import React from 'react';\n\nconst Folder = () => {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      viewBox=\"0 0 24 24\"\n      className=\"line-icon\"\n    >\n      <path\n        d=\"M20 4.7h-7.6l-1.7-2.3c-.5-.7-1.3-1.1-2.2-1.1H4c-1.2 0-2.2 1-2.2 2.2v15.9c0 1.2 1 2.2 2.2 2.2h16c1.2 0 2.2-1 2.2-2.2V6.9c0-1.2-1-2.2-2.2-2.2zM3.2 3.6c0-.4.3-.8.8-.8h4.5c.4 0 .8.2 1 .5l1 1.4H3.2V3.6zm17.6 15.9c0 .4-.3.7-.8.7H4c-.4 0-.8-.3-.8-.7V6.2H20c.4 0 .8.3.8.7v12.6z\"\n        fill=\"#6b7684\"\n      ></path>\n    </svg>\n  );\n};\n\nexport default Folder;\n","import React, { forwardRef, useState } from 'react';\nimport Folder from '../../../../img/Folder';\nimport {\n  InputImageWrapper,\n  StyledFileInput,\n  StyledInputWrapper,\n} from '../TextInput/styled';\n\nexport interface Iprops {\n  defaultPlaceholder: string;\n  uploadFiles?: (file: HTMLInputElement) => void;\n  errorToggle?: boolean;\n  disabled?: boolean;\n}\n\nconst FileInput = (props: Iprops, ref: React.RefObject<HTMLInputElement>) => {\n  const { defaultPlaceholder, uploadFiles, errorToggle, disabled } = props;\n  const [placeholder, setPlaceholder] = useState(\n    defaultPlaceholder || 'Choose a file',\n  );\n\n  return (\n    <StyledInputWrapper error={errorToggle} disabled={!disabled}>\n      <InputImageWrapper>\n        <Folder />\n      </InputImageWrapper>\n      <StyledFileInput\n        onClick={() => {\n          ref.current?.click();\n        }}\n      >\n        {placeholder}\n      </StyledFileInput>\n      <input\n        ref={ref}\n        type={'file'}\n        style={{ display: 'none' }}\n        name={'fileName'}\n        onChange={(e) => {\n          e.target.files && setPlaceholder(e.target.files[0].name);\n        }}\n      />\n    </StyledInputWrapper>\n  );\n};\n\nexport default forwardRef(FileInput);\n","import styled from 'styled-components';\nimport { motion } from 'framer-motion';\n\nexport const ApplyModalInnerWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  width: 100%;\n  z-index: 3;\n`;\n\nexport const ApplyButtonWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  flex-direction: row-reverse;\n  margin-top: 10px;\n`;\nexport const ApplyModalP = styled.p`\n  font-size: ${(props) => props.theme.fontSize.body2};\n  color: ${(props) => props.theme.color.grey600};\n  margin-bottom: 6px;\n`;\nexport const ApplyModalTitle = styled.h5`\n  font-size: ${(props) => props.theme.fontSize.h6};\n  color: ${(props) => props.theme.color.grey900};\n  margin-bottom: 12px;\n`;\n\nexport const ApplyModalInner = styled(motion.div)`\n  margin: 0 auto;\n  background: #fff;\n  border-radius: 10px;\n  box-shadow: 5px 5px 5px 5px rgba(0, 0, 0, 0.1);\n  padding: 20px 30px;\n  display: flex;\n  flex-direction: column;\n  z-index: 999;\n`;\nexport const ApplyModalWrapper = styled(motion.div)`\n  position: fixed;\n  top: 0;\n  right: 0;\n  bottom: 0;\n  left: 0;\n  flex: 1;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background: rgba(0, 0, 0, 0.1);\n  z-index: 999;\n`;\nexport const ApplyModalButtonWrapper = styled.div`\n  margin-right: 10px;\n`;\n","import React from 'react';\nimport { StyledButton, StyledButtonX } from './styled';\nconst colorStyle = (color?: string) => {\n  switch (color) {\n    case 'GDSC blue':\n      return '#4385F3';\n    case 'toss red':\n      return '#F44336';\n    case 'toss blue 200':\n      return '#90C2FF';\n    default:\n      return '#fff';\n  }\n};\ninterface Iprops {\n  text: string;\n  color?: string;\n  disable?: boolean;\n  onClick?: () => void;\n  type?: 'button' | 'submit' | 'reset';\n}\nconst GDSCButtonL = (props: Iprops) => {\n  const { text, color, disable, onClick, type } = props;\n\n  return (\n    <StyledButtonX\n      background={colorStyle(color)}\n      color={color && '#fff'}\n      size={'large'}\n      border={color && '#fff'}\n      disable={disable}\n      onClick={onClick}\n      type={type}\n    >\n      {text}\n    </StyledButtonX>\n  );\n};\nconst GDSCButton = (props: Iprops) => {\n  const { text, color, disable, onClick, type } = props;\n\n  return (\n    <StyledButtonX\n      color={color && '#fff'}\n      border={color && '#fff'}\n      background={colorStyle(color)}\n      disable={disable}\n      onClick={onClick}\n      type={type}\n    >\n      {text}\n    </StyledButtonX>\n  );\n};\n\nexport { GDSCButtonL, GDSCButton };\n","import React, { useCallback, useEffect, useRef } from 'react';\nimport { motion } from 'framer-motion';\n\nexport interface Props {\n  children: React.ReactNode;\n  outsideClick: (target: EventTarget | null) => void;\n  trigger?: boolean;\n}\n\nconst OutsideClickHandler: React.FC<Props> = ({\n  children,\n  outsideClick,\n  trigger = true,\n}) => {\n  const ref = useRef<HTMLElement>(null);\n\n  const handleClick = useCallback(\n    (e: Event) => {\n      if (ref.current && !ref.current.contains(e.target as Node)) {\n        outsideClick(e.target);\n      }\n    },\n    [outsideClick],\n  );\n\n  useEffect(() => {\n    // Allow logic to operate after a render\n    if (trigger) {\n      setTimeout(() => document.addEventListener('click', handleClick), 0);\n    }\n\n    return () => {\n      document.removeEventListener('click', handleClick);\n    };\n  }, [handleClick, trigger]);\n\n  return (\n    <motion.div ref={ref as React.Ref<HTMLDivElement>}>{children}</motion.div>\n  );\n};\n\nexport default OutsideClickHandler;\n","import React from 'react';\nimport {\n  ApplyButtonWrapper,\n  ApplyModalButtonWrapper,\n  ApplyModalInner,\n  ApplyModalInnerWrapper,\n  ApplyModalP,\n  ApplyModalTitle,\n  ApplyModalWrapper,\n} from './styled';\nimport { GDSCButton } from '../../Button';\nimport { MODAL_KEY, modalState } from '../../../../store/modal';\nimport { useRecoilState } from 'recoil';\nimport OutsideClickHandler from '../../../../utils/OutsideClickHandler';\nimport { AnimatePresence } from 'framer-motion';\nimport BulletList from '../../BulletList';\n\ninterface Props {\n  name: string;\n  position: string;\n  email: string;\n  phoneNumber: string;\n  onClick: () => void;\n}\nconst ApplyModal: React.FC<Props> = ({\n  name,\n  position,\n  email,\n  phoneNumber,\n  onClick,\n}) => {\n  const variants = {\n    active: {\n      opacity: 1,\n      scale: 1,\n      y: 0,\n    },\n    unActive: {\n      opacity: 0,\n      scale: 0,\n      y: 200,\n    },\n  };\n  const [modal, setModal] = useRecoilState(modalState);\n  return (\n    <AnimatePresence>\n      {modal.applyCheck && (\n        <ApplyModalWrapper\n          initial={{ opacity: 0 }}\n          exit={{ opacity: 0 }}\n          animate={{ opacity: 1 }}\n        >\n          <OutsideClickHandler\n            outsideClick={() =>\n              setModal({ ...modal, [MODAL_KEY.APPLY_CHECK]: false })\n            }\n          >\n            <ApplyModalInner\n              variants={variants}\n              exit={'unActive'}\n              animate={'active'}\n              initial={{ opacity: 0, scale: 0, y: 200 }}\n              transition={{ duration: 0.5 }}\n            >\n              <ApplyModalInnerWrapper>\n                <ApplyModalTitle>최종 제출 전, 확인해주세요.</ApplyModalTitle>\n                <ApplyModalP>이름: {name}</ApplyModalP>\n                <ApplyModalP>지원 포지션: {position}</ApplyModalP>\n                <ApplyModalP>이메일 주소: {email}</ApplyModalP>\n                <ApplyModalP>전화번호: {phoneNumber}</ApplyModalP>\n\n                {/*<BulletList text={'지원서 내용은 제출 후 수정이 불가능해요.'} />*/}\n              </ApplyModalInnerWrapper>\n              <ApplyModalP>\n                * 지원서 내용은 제출 후 수정이 불가능해요.\n              </ApplyModalP>\n              <ApplyButtonWrapper>\n                <GDSCButton\n                  text={'제출하기'}\n                  onClick={() => onClick()}\n                  color={'GDSC blue'}\n                />\n                <ApplyModalButtonWrapper>\n                  <GDSCButton\n                    text={'돌아가기'}\n                    onClick={() =>\n                      setModal({ ...modal, [MODAL_KEY.APPLY_CHECK]: false })\n                    }\n                  />\n                </ApplyModalButtonWrapper>\n              </ApplyButtonWrapper>\n            </ApplyModalInner>\n          </OutsideClickHandler>\n        </ApplyModalWrapper>\n      )}\n    </AnimatePresence>\n  );\n};\n\nexport default ApplyModal;\n","import React, { memo, useLayoutEffect, useRef, useState } from 'react';\nimport { SubTitle, Title } from '../../../components/common/Title/title';\nimport { ContainerInner, LayoutContainer } from '../../../styles/layouts';\nimport {\n  FormArticleWrapper,\n  FormLabel,\n  FormLi,\n  FormMargin,\n  FormMarginXS,\n  FormSubmitButton,\n  FormText,\n  RecruitFormInner,\n  RecruitFormWrapper,\n} from './styled';\nimport TextInput from '../../../components/common/input/TextInput';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport { positionSelect } from './FormFunctions';\nimport {\n  getDownloadURL,\n  ref,\n  StorageReference,\n  uploadBytesResumable,\n  UploadTaskSnapshot,\n} from 'firebase/storage';\nimport { storage } from '../../../firebase/firebase.config';\nimport { dbService } from '../../../firebase/firebase';\nimport { useRecoilState } from 'recoil';\nimport { loaderState } from '../../../store/loader';\nimport { FormikProvider, useFormik } from 'formik';\nimport { recruitFormSchema } from '../../../components/Validation/profileEdit';\nimport FileInput from '../../../components/common/input/FileInput';\nimport ApplyModal from '../../../components/common/Modal/ApplyModal';\nimport { MODAL_KEY, modalState } from '../../../store/modal';\n\nconst RecruitForm = () => {\n  const { id } = useParams();\n  const [position, setPosition] = useState('');\n  const [loading, setLoading] = useRecoilState(loaderState);\n  const [modal, setModal] = useRecoilState(modalState);\n  const [uploadProgress, setUploadProgress] = useState(0);\n\n  const input = useRef<HTMLInputElement>(null);\n  const navigate = useNavigate();\n  const recruitItem = {\n    uploadDate: new Date(),\n    name: '',\n    phoneNumber: '',\n    email: '',\n    major: '',\n    studentID: '',\n    position: positionSelect[id as keyof typeof positionSelect],\n    link0: '',\n    link1: '',\n    fileURL: '',\n  };\n  const recruitFormik = useFormik({\n    initialValues: recruitItem,\n    onSubmit: () => {\n      return;\n    },\n    validationSchema: recruitFormSchema,\n  });\n  const uploadApplicantFile = (\n    storageRef: StorageReference,\n    file: File,\n    object: object,\n  ) => {\n    const uploadTask = uploadBytesResumable(storageRef, file);\n    uploadTask.then(() => {\n      getDownloadURL(storageRef).then(async (url) => {\n        await dbService\n          .collection('applicants')\n          .doc()\n          .set({ ...object, fileURL: url });\n      });\n    });\n  };\n  const checkFile = (fileList: FileList | null, size: number, type: string) => {\n    if (fileList !== null) {\n      const file = fileList[0];\n      if (!file) return;\n      if (file.size > size) {\n        alert(\n          `${type} 파일 사이즈는 ${Math.floor(\n            size / 1000000,\n          )}MB 이하로 선택해주세요.`,\n        );\n      }\n      if (file.type !== type) {\n        const typeName = type.replace('application/', '');\n        alert(`${typeName} 파일만 업로드 가능합니다.`);\n        return;\n      }\n      return file;\n    }\n  };\n  const calculateProgress = (progress, total) => {\n    return Math.round((progress / total) * 100);\n  };\n\n  const uploadFiles = async (data: HTMLInputElement) => {\n    try {\n      const file = checkFile(data.files, 50000001, 'application/pdf');\n      if (file instanceof File) {\n        setLoading({ ...loading, load: true });\n        setModal({ ...modal, [MODAL_KEY.APPLY_CHECK]: false });\n        const storageRef = ref(storage, `${file.name}`);\n        const uploadTask = uploadBytesResumable(storageRef, file);\n        await uploadTask.on('state_changed', (snapshot: UploadTaskSnapshot) => {\n          setUploadProgress(\n            calculateProgress(snapshot.bytesTransferred, snapshot.totalBytes),\n          );\n        }),\n          uploadApplicantFile(storageRef, file, recruitFormik.values);\n        setLoading({ ...loading, load: false });\n        navigate(\n          `/recruit/apply-success?username=${recruitFormik.values.name}&position=${position}`,\n        );\n      }\n    } catch (e) {\n      console.log(e);\n    }\n  };\n  const onSubmit = async () => {\n    {\n      input.current && (await uploadFiles(input.current));\n    }\n  };\n\n  const requiredSchema = !!(\n    recruitFormik.values.email &&\n    recruitFormik.values.name &&\n    recruitFormik.values.phoneNumber &&\n    recruitFormik.values.major &&\n    recruitFormik.values.studentID &&\n    recruitFormik.values.position &&\n    recruitFormik.values.link0.length > 0 &&\n    input.current?.files\n  );\n  useLayoutEffect(() => {\n    setPosition(positionSelect[id as keyof typeof positionSelect]);\n  }, [id]);\n  return (\n    <>\n      <ApplyModal {...recruitFormik.values} onClick={onSubmit} />\n      <LayoutContainer>\n        <ContainerInner>\n          <FormMargin />\n          <FormikProvider value={recruitFormik}>\n            <RecruitFormWrapper>\n              <RecruitFormInner>\n                <Title>지원서 작성하기</Title>\n                <SubTitle>{position}</SubTitle>\n                <FormMargin />\n                <div>\n                  <FormLabel essential={true}>이름(실명)</FormLabel>\n                  <TextInput\n                    placeholder={'김구글'}\n                    name={'name'}\n                    value={recruitFormik.values.name}\n                    onChange={recruitFormik.handleChange}\n                    touched={recruitFormik.touched.name}\n                    error={recruitFormik.errors.name}\n                  />\n                </div>\n\n                <div>\n                  <FormLabel essential={true}>전화번호</FormLabel>\n                  <TextInput\n                    placeholder={'010-0000-0000'}\n                    name={'phoneNumber'}\n                    value={recruitFormik.values.phoneNumber}\n                    onChange={recruitFormik.handleChange}\n                    touched={recruitFormik.touched.phoneNumber}\n                    error={recruitFormik.errors.phoneNumber}\n                  />\n                </div>\n\n                <div>\n                  <FormLabel essential={true}>이메일(gmail)</FormLabel>\n                  <TextInput\n                    placeholder={'googledev@gmail.com'}\n                    name={'email'}\n                    value={recruitFormik.values.email}\n                    onChange={recruitFormik.handleChange}\n                    touched={recruitFormik.touched.email}\n                    error={recruitFormik.errors.email}\n                  />\n                </div>\n                <div>\n                  <FormLabel essential={true}>학과</FormLabel>\n                  <TextInput\n                    placeholder={'구글개발학과'}\n                    name={'major'}\n                    value={recruitFormik.values.major}\n                    onChange={recruitFormik.handleChange}\n                    touched={recruitFormik.touched.major}\n                    error={recruitFormik.errors.major}\n                  />\n                </div>\n\n                <div>\n                  <FormLabel essential={true}>학번</FormLabel>\n                  <TextInput\n                    placeholder={'20221234'}\n                    name={'studentID'}\n                    value={recruitFormik.values.studentID}\n                    onChange={recruitFormik.handleChange}\n                    touched={recruitFormik.touched.studentID}\n                    error={recruitFormik.errors.studentID}\n                  />\n                </div>\n                <div>\n                  <FormLabel essential={true}>포지션</FormLabel>\n                  <TextInput\n                    disabled={true}\n                    name={'position'}\n                    placeholder={position}\n                  />\n                </div>\n\n                <div>\n                  <FormLabel essential={true}>지원서</FormLabel>\n                  <FileInput\n                    defaultPlaceholder={'지원서 / 포트폴리오 PDF'}\n                    ref={input}\n                  />\n                  <FormText>\n                    * 파일은 최대 50MB로 업로드 하실 수 있습니다.\n                  </FormText>\n                  <FormText>\n                    * 원활한 검토를 위해 PDF 형식으로 제출해주세요.\n                  </FormText>\n                  <FormText>\n                    * 지원서는 자유 양식이며 아래 항목을 포함하여 제출해주세요.\n                  </FormText>\n                  <FormArticleWrapper>\n                    <FormLi>활용할 수 있는 기술스택을 알려주세요.</FormLi>\n                    <FormLi>\n                      프로젝트 협업 경험이 있다면 자세하게 알려주세요.\n                    </FormLi>\n                    <FormLi>\n                      팀 리드 해보신 경험과 어떤 리드가 좋은 리드라고\n                      생각하시는지 알려주세요.\n                    </FormLi>\n                    <FormLi>\n                      팀원과 갈등상황은 어떻게 해결하시나요? 커뮤니케이션 방식을\n                      알려주세요.\n                    </FormLi>\n                    <FormLi>\n                      본인만의 공부방법이 있다면 어떤 것이 있나요? 이뤄낸 성과가\n                      있다면 자세히 알려주세요.\n                    </FormLi>\n                  </FormArticleWrapper>\n                </div>\n                <div>\n                  <FormLabel essential={true}>링크 1</FormLabel>\n                  <TextInput\n                    placeholder={'https://'}\n                    name={'link0'}\n                    value={recruitFormik.values.link0}\n                    onChange={recruitFormik.handleChange}\n                    touched={recruitFormik.touched.link0}\n                    error={recruitFormik.errors.link0}\n                  />\n                  <FormMarginXS />\n                  <FormLabel>링크 2 (선택사항)</FormLabel>\n                  <TextInput\n                    placeholder={'https://'}\n                    name={'link1'}\n                    value={recruitFormik.values.link1}\n                    onChange={recruitFormik.handleChange}\n                    touched={recruitFormik.touched.link1}\n                    error={recruitFormik.errors.link1}\n                  />\n                  <FormText>\n                    자신을 잘 나타낼 수 있는 개인블로그, 노션, Github링크 등을\n                    입력해주세요.\n                  </FormText>\n                  <FormText>\n                    *포트폴리오를 업로드하셔야할 경우 클라우드/드라이브에 파일을\n                    업로드 후 공유링크를 입력해주세요.\n                  </FormText>\n                </div>\n                <FormMargin />\n                <FormSubmitButton\n                  onClick={() =>\n                    setModal({ ...modal, [MODAL_KEY.APPLY_CHECK]: true })\n                  }\n                  disable={!(recruitFormik.isValid && requiredSchema)}\n                >\n                  제출하기\n                </FormSubmitButton>\n                <FormMargin />\n              </RecruitFormInner>\n            </RecruitFormWrapper>\n          </FormikProvider>\n        </ContainerInner>\n      </LayoutContainer>\n    </>\n  );\n};\n\nexport default memo(RecruitForm);\n"],"sourceRoot":""}